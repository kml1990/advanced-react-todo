{"version":3,"sources":["components/Filters.js","actions/todoActions.js","actions/types.js","components/TodoList.js","actions/categoriesActions.js","components/CategoryModal.js","actions/tagsActions.js","components/TagModal.js","components/TodoModal.js","components/TodoContainer.js","reducers/todoReducer.js","reducers/categoryReducer.js","reducers/tagReducer.js","reducers/index.js","store.js","components/AppNavbar.js","App.js","serviceWorker.js","index.js"],"names":["Filters","state","currentFilter","getCategoryCount","categoryId","todos","filter","x","category","length","getCompletedCount","completed","getActiveCount","onFilterChange","type","value","current","_this","setState","props","controlFilter","_this2","this","todo","categories","tags","tag","react_default","a","createElement","index_es","icon","Nav","vertical","NavItem","NavLink","href","onClick","active","className","Badge","pill","size","map","cat","key","_id","name","concat","Component","connect","setTodosLoading","ToDoList","onDeleteClick","id","deleteTodo","onCompleteClick","updateTodo","getCategoryName","find","getTagName","tagId","getDateState","date","today","Date","setHours","dueDate","getTime","filteredToDos","JSON","parse","ListGroup","react_transition_group","timeout","classNames","ListGroupItem","ListGroupItemHeading","color","bind","ListGroupItemText","description","Row","Col","label","Intl","DateTimeFormat","year","month","day","format","dispatch","newTodos","localStorage","getItem","setItem","stringify","payload","updatedTodo","updatedTodos","setCategoriesLoading","CategoryModal","catCollapse","toggleCategoryCollapse","onChange","e","Object","defineProperty","target","onToggleCat","toggleCat","catModal","addNewCategory","preventDefault","newCategory","uuid","addCategory","onDeleteCategory","deleteCategory","Modal","isOpen","toggle","Form","ModalHeader","ModalBody","FormGroup","Label","for","Input","placeholder","Collapse","ModalFooter","Button","unshift","newCategories","setTagsLoading","TagModal","tagCollapse","toggleTagCollapse","onToggleTag","tagModal","addNewTag","newTag","addTag","onDeleteTag","deleteTag","newTags","TodoModal","todoModal","toggleToDo","toggleTag","onCategoryChange","onTagsChange","addNewTodo","newTodo","addTodo","catOptions","tagsOptions","InputGroup","react_select_esm","options","InputGroupAddon","addonType","components_CategoryModal","isMulti","components_TagModal","ToDo","dropdownOpen","newFilter","prevState","getTodos","getCategories","getTags","Container","fluid","components_TodoModal","sm","components_Filters","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","TodoList","axios","get","then","res","data","initialState","loading","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","item","index","middleware","thunk","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","compose","applyMiddleware","apply","AppNavbar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Navbar","dark","expand","NavbarBrand","App","es","components_AppNavbar","TodoContainer","library","add","faEdit","faCheck","faTrashAlt","faList","faCalendarAlt","faPlus","faArchive","faTh","faHome","faClipboardList","faAddressBook","faClipboard","faBookmark","faSuitcase","faHandshake","faUserCircle","faInfoCircle","faTags","faFilter","faSitemap","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0e77d77d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Nav, NavItem, NavLink, Badge } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Filters extends Component {\r\n  state = {\r\n    currentFilter: \"All\"\r\n  };\r\n\r\n  getCategoryCount = (categoryId, todos) => {\r\n    const todoCount = todos.filter(x => x.category === categoryId).length;\r\n    return todoCount;\r\n  };\r\n\r\n  getCompletedCount = todos => {\r\n    const todoCompletedCount = todos.filter(x => x.completed === true).length;\r\n    return todoCompletedCount;\r\n  };\r\n\r\n  getActiveCount = todos => {\r\n    const todoActiveCount = todos.filter(x => x.completed === false).length;\r\n    return todoActiveCount;\r\n  };\r\n\r\n  onFilterChange = (type, value, current) => {\r\n    this.setState({\r\n      currentFilter: current\r\n    });\r\n    this.props.controlFilter(type, value, current);\r\n  };\r\n\r\n  render() {\r\n    const { todos } = this.props.todo;\r\n    const { categories } = this.props.category;\r\n    const { tags } = this.props.tag;\r\n\r\n    return (\r\n      <div>\r\n        <p>\r\n          <FontAwesomeIcon icon=\"filter\" /> Filters\r\n        </p>\r\n        <Nav vertical>\r\n          <NavItem>\r\n            <NavLink\r\n              href=\"#\"\r\n              onClick={() => this.onFilterChange(\"general\", \"all\", \"All\")}\r\n              active={this.state.currentFilter === \"All\"}\r\n            >\r\n              All{\" \"}\r\n              <span className=\"float-right\">\r\n                <Badge pill>{todos.length}</Badge>\r\n              </span>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              href=\"#\"\r\n              onClick={() => this.onFilterChange(\"completed\", false, \"Active\")}\r\n              active={this.state.currentFilter === \"Active\"}\r\n            >\r\n              Active{\" \"}\r\n              <span className=\"float-right\">\r\n                <Badge pill>{this.getActiveCount(todos)}</Badge>\r\n              </span>\r\n            </NavLink>\r\n          </NavItem>\r\n          {/* <NavItem>\r\n                        <NavLink href=\"#\" onClick={() => this.onFilterChange(\"completed\", \"false\")}>Starred <span className=\"float-right\"><Badge pill>0</Badge></span></NavLink>\r\n                    </NavItem> */}\r\n          <NavItem>\r\n            <NavLink\r\n              href=\"#\"\r\n              onClick={() =>\r\n                this.onFilterChange(\"completed\", true, \"Completed\")\r\n              }\r\n              active={this.state.currentFilter === \"Completed\"}\r\n            >\r\n              Completed{\" \"}\r\n              <span className=\"float-right\">\r\n                <Badge pill>{this.getCompletedCount(todos)}</Badge>\r\n              </span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <hr />\r\n        <p>\r\n          <FontAwesomeIcon icon=\"sitemap\" /> Categories{\" \"}\r\n          <a href=\"#\" className=\"float-right\">\r\n            <FontAwesomeIcon size=\"sm\" icon=\"plus\" />\r\n          </a>\r\n        </p>\r\n        <Nav vertical>\r\n          {categories.map(cat => (\r\n            <NavItem key={cat._id}>\r\n              <NavLink\r\n                href=\"#\"\r\n                onClick={() =>\r\n                  this.onFilterChange(\"category\", cat._id, cat.name)\r\n                }\r\n                active={this.state.currentFilter === cat.name}\r\n              >\r\n                {cat.name}\r\n                <span className=\"float-right\">\r\n                  <Badge pill>{this.getCategoryCount(cat._id, todos)}</Badge>\r\n                </span>\r\n              </NavLink>\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n        <hr />\r\n        <p>\r\n          <FontAwesomeIcon icon=\"tags\" /> Tags{\" \"}\r\n          <a href=\"#\" className=\"float-right\">\r\n            <FontAwesomeIcon size=\"sm\" icon=\"plus\" />\r\n          </a>\r\n        </p>\r\n        {tags.map(tag => (\r\n          <a\r\n            key={tag._id}\r\n            href=\"#\"\r\n            className={`tags-list ${\r\n              this.state.currentFilter === tag.name ? \"active\" : \"\"\r\n            }`}\r\n            onClick={() => this.onFilterChange(\"tag\", tag._id, tag.name)}\r\n          >\r\n            <Badge pill>{tag.name}</Badge>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilters.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(mapStateToProps)(Filters);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  TODOS_LOADING\r\n} from \"./types.js\";\r\n\r\nexport const getTodos = () => dispatch => {\r\n  dispatch(setTodosLoading());\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n\r\n  if (todos.length) {\r\n    dispatch({\r\n      type: GET_TODOS,\r\n      payload: todos\r\n    });\r\n  } else {\r\n    axios.get(\"data/todos.json\").then(res =>\r\n      dispatch({\r\n        type: GET_TODOS,\r\n        payload: res.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const addTodo = todo => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  todos.unshift(todo);\r\n  localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  dispatch({\r\n    type: ADD_TODO,\r\n    payload: todo\r\n  });\r\n};\r\n\r\nexport const deleteTodo = id => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  const newTodos = todos.filter(todo => {\r\n    return todo._id !== id;\r\n  });\r\n  localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n\r\n  dispatch({\r\n    type: DELETE_TODO,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const updateTodo = updatedTodo => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  const updatedTodos = todos.map(todo => {\r\n    if (todo._id === updatedTodo._id) {\r\n      return (todo = updatedTodo);\r\n    }\r\n    return todo;\r\n  });\r\n  localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\r\n\r\n  dispatch({\r\n    type: UPDATE_TODO,\r\n    payload: updatedTodos\r\n  });\r\n};\r\n\r\nexport const setTodosLoading = () => {\r\n  return {\r\n    type: TODOS_LOADING\r\n  };\r\n};\r\n","/* CATEGORIES */\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\r\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\r\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\r\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\";\r\n\r\nexport const CATEGORIES_LOADING = \"CATEGORIES_LOADING\";\r\n\r\n/* TAGS */\r\nexport const GET_TAGS = \"GET_TAGS\";\r\nexport const ADD_TAG = \"ADD_TAG\";\r\nexport const DELETE_TAG = \"DELETE_TAG\";\r\nexport const UPDATE_TAG = \"UPDATE_TAG\";\r\n\r\nexport const TAGS_LOADING = \"TAGS_LOADING\";\r\n\r\n/* TODOS */\r\nexport const GET_TODOS = \"GET_TODOS\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\nexport const TODOS_LOADING = \"TODOS_LOADING\";\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  Badge,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { deleteTodo, updateTodo } from \"../actions/todoActions\";\r\n\r\nclass ToDoList extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteTodo(id);\r\n  };\r\n\r\n  onCompleteClick = (todo, completed) => {\r\n    todo.completed = !completed;\r\n    this.props.updateTodo(todo);\r\n  };\r\n\r\n  getCategoryName = (categoryId, categories) => {\r\n    const cat = categories.find(x => x._id === categoryId);\r\n    if (typeof cat !== \"undefined\") {\r\n      return cat[\"name\"];\r\n    }\r\n  };\r\n\r\n  getTagName = (tagId, tags) => {\r\n    const tag = tags.find(x => x._id === tagId);\r\n    if (typeof tag !== \"undefined\") {\r\n      return tag[\"name\"];\r\n    }\r\n  };\r\n\r\n  getDateState = date => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let dueDate = new Date(date);\r\n    dueDate.setHours(0, 0, 0, 0);\r\n\r\n    if (dueDate.getTime() > today.getTime()) {\r\n      return \"text-primary\";\r\n    } else if (dueDate.getTime() == today.getTime()) {\r\n      return \"text-warning\";\r\n    } else {\r\n      return \"text-danger\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { todos } = this.props.todo;\r\n    let filteredToDos = todos.filter(todo => {\r\n      var type = this.props.filter.type;\r\n      var value = this.props.filter.value;\r\n      if (type === \"general\" && value === \"all\") {\r\n        // return all\r\n        return todo;\r\n      } else if (type === \"tag\") {\r\n        // search by tags\r\n        var tags = JSON.parse(todo.tags);\r\n        var hasTag = tags.filter(x => x.value === value).length !== 0;\r\n        if (hasTag) {\r\n          return todo;\r\n        }\r\n      } else {\r\n        return todo[type] === value;\r\n      }\r\n    });\r\n    //const { todos } = this.props.todo;\r\n    const { categories } = this.props.category;\r\n    const { tags } = this.props.tag;\r\n\r\n    return (\r\n      <ListGroup className=\"todo\">\r\n        <TransitionGroup className=\"todo__list\">\r\n          {filteredToDos.map(todo => (\r\n            <CSSTransition key={todo._id} timeout={500} classNames=\"fade\">\r\n              <ListGroupItem\r\n                className={\r\n                  todo.completed\r\n                    ? \"toDo__list-item completed\"\r\n                    : \"toDo__list-item\"\r\n                }\r\n              >\r\n                <ListGroupItemHeading>\r\n                  <span className=\"toDo__title\">{todo.name}</span>{\" \"}\r\n                  <Badge color=\"secondary\">\r\n                    {this.getCategoryName(todo.category, categories)}\r\n                  </Badge>\r\n                  <div className=\"float-right toDo__actions\">\r\n                    <a\r\n                      className=\"text-primary\"\r\n                      href=\"#\"\r\n                      onClick={this.onCompleteClick.bind(\r\n                        this,\r\n                        todo,\r\n                        todo.completed\r\n                      )}\r\n                    >\r\n                      <FontAwesomeIcon icon=\"check\" />\r\n                    </a>\r\n                    <a className=\"text-primary\" href=\"#\">\r\n                      <FontAwesomeIcon icon=\"edit\" />\r\n                    </a>\r\n                    <a\r\n                      className=\"text-primary\"\r\n                      href=\"#\"\r\n                      onClick={this.onDeleteClick.bind(this, todo._id)}\r\n                    >\r\n                      <FontAwesomeIcon icon=\"trash-alt\" />\r\n                    </a>\r\n                  </div>\r\n                </ListGroupItemHeading>\r\n                <ListGroupItemText className=\"truncate\">\r\n                  {todo.description}\r\n                </ListGroupItemText>\r\n                <div className=\"list-goup-item-footer\">\r\n                  <Row>\r\n                    <Col className=\"toDo__tags\">\r\n                      <div>\r\n                        {JSON.parse(todo.tags).map(tag => (\r\n                          <Badge key={tag.value} color=\"secondary\">\r\n                            {tag.label}\r\n                          </Badge>\r\n                        ))}\r\n                      </div>\r\n                    </Col>\r\n                    <Col>\r\n                      <div className=\"text-right\">\r\n                        <h6 className={this.getDateState(todo.dueDate)}>\r\n                          <strong>Due: </strong>{\" \"}\r\n                          {new Intl.DateTimeFormat(\"en-GB\", {\r\n                            year: \"numeric\",\r\n                            month: \"short\",\r\n                            day: \"2-digit\"\r\n                          }).format(new Date(todo.dueDate))}\r\n                        </h6>\r\n                        <h6>\r\n                          <strong>Added: </strong>{\" \"}\r\n                          {new Intl.DateTimeFormat(\"en-GB\", {\r\n                            year: \"numeric\",\r\n                            month: \"short\",\r\n                            day: \"2-digit\"\r\n                          }).format(new Date(todo.date))}\r\n                        </h6>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </ListGroupItem>\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nToDoList.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteTodo, updateTodo }\r\n)(ToDoList);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_CATEGORIES,\r\n  ADD_CATEGORY,\r\n  DELETE_CATEGORY,\r\n  CATEGORIES_LOADING\r\n} from \"./types.js\";\r\n\r\nexport const getCategories = () => dispatch => {\r\n  dispatch(setCategoriesLoading());\r\n  const categories = JSON.parse(localStorage.getItem(\"categories\")) || [];\r\n\r\n  if (categories.length) {\r\n    dispatch({\r\n      type: GET_CATEGORIES,\r\n      payload: categories\r\n    });\r\n  } else {\r\n    axios.get(\"advanced-react-todo/data/categories.json\").then(res =>\r\n      dispatch({\r\n        type: GET_CATEGORIES,\r\n        payload: res.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const addCategory = category => dispatch => {\r\n  const categories = JSON.parse(localStorage.getItem(\"categories\")) || [];\r\n  categories.unshift(category);\r\n  localStorage.setItem(\"categories\", JSON.stringify(categories));\r\n  dispatch({\r\n    type: ADD_CATEGORY,\r\n    payload: category\r\n  });\r\n};\r\n\r\nexport const deleteCategory = id => dispatch => {\r\n  const categories = JSON.parse(localStorage.getItem(\"categories\")) || [];\r\n  const newCategories = categories.filter(category => {\r\n    return category._id !== id;\r\n  });\r\n  localStorage.setItem(\"categories\", JSON.stringify(newCategories));\r\n\r\n  dispatch({\r\n    type: DELETE_CATEGORY,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const setCategoriesLoading = () => {\r\n  return {\r\n    type: CATEGORIES_LOADING\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport uuid from \"uuid\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { addCategory, deleteCategory } from \"../actions/categoriesActions\";\r\n\r\nclass CategoryModal extends Component {\r\n  state = {\r\n    catCollapse: false,\r\n    name: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  toggleCategoryCollapse = () => {\r\n    this.setState({\r\n      catCollapse: !this.state.catCollapse\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onToggleCat = () => {\r\n    this.props.toggleCat(this.state.catModal);\r\n  };\r\n\r\n  addNewCategory = e => {\r\n    e.preventDefault();\r\n\r\n    const newCategory = {\r\n      _id: uuid(),\r\n      name: this.state.name,\r\n      description: this.state.description\r\n    };\r\n    // Add todo via newCategory action\r\n    this.props.addCategory(newCategory);\r\n\r\n    // Close todoModal\r\n    this.onToggleCat();\r\n  };\r\n\r\n  onDeleteCategory = id => {\r\n    this.props.deleteCategory(id);\r\n  };\r\n\r\n  render() {\r\n    const { categories } = this.props.category;\r\n    return (\r\n      <Modal isOpen={this.props.catModal} toggle={this.onToggleCat}>\r\n        <Form>\r\n          <ModalHeader>Add Category </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label for=\"name\">Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Add category name\"\r\n                onChange={this.onChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"description\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                placeholder=\"Add category description\"\r\n                onChange={this.onChange}\r\n              />\r\n            </FormGroup>\r\n            <Collapse isOpen={this.state.catCollapse}>\r\n              <h5>Existing categories</h5>\r\n              <br />\r\n              <ListGroup>\r\n                {categories.map(cat => (\r\n                  <ListGroupItem key={cat._id}>\r\n                    <strong>{cat.name}</strong> - {cat.description}\r\n                    <a\r\n                      className=\"text-danger float-right\"\r\n                      href=\"#\"\r\n                      onClick={this.onDeleteCategory.bind(this, cat._id)}\r\n                    >\r\n                      <FontAwesomeIcon icon=\"trash-alt\" />\r\n                    </a>\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n            </Collapse>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggleCategoryCollapse}>\r\n              Show/Edit existing categories\r\n            </Button>\r\n            <Button color=\"primary\" onClick={this.addNewCategory}>\r\n              Add Category\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.onToggleCat}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nCategoryModal.propTypes = {\r\n  category: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  category: state.category\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addCategory, deleteCategory }\r\n)(CategoryModal);\r\n","import axios from \"axios\";\r\nimport { GET_TAGS, ADD_TAG, DELETE_TAG, TAGS_LOADING } from \"./types.js\";\r\n\r\nexport const getTags = () => dispatch => {\r\n  dispatch(setTagsLoading());\r\n  const tags = JSON.parse(localStorage.getItem(\"tags\")) || [];\r\n  if (tags.length) {\r\n    dispatch({\r\n      type: GET_TAGS,\r\n      payload: tags\r\n    });\r\n  } else {\r\n    axios.get(\"data/tags.json\").then(res =>\r\n      dispatch({\r\n        type: GET_TAGS,\r\n        payload: res.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const addTag = tag => dispatch => {\r\n  const tags = JSON.parse(localStorage.getItem(\"tags\")) || [];\r\n  tags.unshift(tag);\r\n  localStorage.setItem(\"tags\", JSON.stringify(tags));\r\n  dispatch({\r\n    type: ADD_TAG,\r\n    payload: tag\r\n  });\r\n};\r\n\r\nexport const deleteTag = id => dispatch => {\r\n  const tags = JSON.parse(localStorage.getItem(\"tags\")) || [];\r\n  const newTags = tags.filter(tag => {\r\n    return tag._id !== id;\r\n  });\r\n  localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n\r\n  dispatch({\r\n    type: DELETE_TAG,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const setTagsLoading = () => {\r\n  return {\r\n    type: TAGS_LOADING\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport uuid from \"uuid\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { addTag, deleteTag } from \"../actions/tagsActions\";\r\n\r\nclass TagModal extends Component {\r\n  state = {\r\n    tagCollapse: false,\r\n    name: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  toggleTagCollapse = () => {\r\n    this.setState({\r\n      tagCollapse: !this.state.tagCollapse\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onToggleTag = () => {\r\n    this.props.toggleCat(this.state.tagModal);\r\n  };\r\n\r\n  addNewTag = e => {\r\n    e.preventDefault();\r\n\r\n    const newTag = {\r\n      _id: uuid(),\r\n      name: this.state.name,\r\n      description: this.state.description\r\n    };\r\n    // Add todo via newTag action\r\n    this.props.addTag(newTag);\r\n\r\n    // Close todoModal\r\n    this.onToggleTag();\r\n  };\r\n\r\n  onDeleteTag = id => {\r\n    this.props.deleteTag(id);\r\n  };\r\n\r\n  render() {\r\n    const { tags } = this.props.tag;\r\n    return (\r\n      <Modal isOpen={this.props.tagModal} toggle={this.onToggleTag}>\r\n        <Form>\r\n          <ModalHeader>Add Tag </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label for=\"name\">Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Add tag name\"\r\n                onChange={this.onChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"description\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                placeholder=\"Add tag description\"\r\n                onChange={this.onChange}\r\n              />\r\n            </FormGroup>\r\n            <Collapse isOpen={this.state.tagCollapse}>\r\n              <h5>Existing tags</h5>\r\n              <br />\r\n              <ListGroup>\r\n                {tags.map(tag => (\r\n                  <ListGroupItem key={tag._id}>\r\n                    <strong>{tag.name}</strong> - {tag.description}\r\n                    <a\r\n                      className=\"text-danger float-right\"\r\n                      href=\"#\"\r\n                      onClick={this.onDeleteTag.bind(this, tag._id)}\r\n                    >\r\n                      <FontAwesomeIcon icon=\"trash-alt\" />\r\n                    </a>\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n            </Collapse>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggleTagCollapse}>\r\n              Show/Edit existing tags\r\n            </Button>\r\n            <Button color=\"primary\" onClick={this.addNewTag}>\r\n              Add Tag\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.onToggleTag}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nTagModal.propTypes = {\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addTag, deleteTag }\r\n)(TagModal);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Select from \"react-select\";\r\nimport uuid from \"uuid\";\r\n\r\nimport { addTodo } from \"../actions/todoActions\";\r\n\r\nimport CategoryModal from \"./CategoryModal\";\r\nimport TagModal from \"./TagModal\";\r\n\r\nclass TodoModal extends Component {\r\n  state = {\r\n    todoModal: false,\r\n    catModal: false,\r\n    tagModal: false,\r\n    name: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    tags: [],\r\n    dueDate: new Date()\r\n  };\r\n\r\n  toggleToDo = () => {\r\n    this.setState({\r\n      todoModal: !this.state.todoModal\r\n    });\r\n  };\r\n\r\n  toggleCat = () => {\r\n    this.setState({\r\n      catModal: !this.state.catModal\r\n    });\r\n  };\r\n\r\n  toggleTag = () => {\r\n    this.setState({\r\n      tagModal: !this.state.tagModal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onCategoryChange = e => {\r\n    this.setState({\r\n      category: e.value\r\n    });\r\n  };\r\n\r\n  onTagsChange = e => {\r\n    this.setState({\r\n      tags: JSON.stringify(e)\r\n    });\r\n  };\r\n\r\n  addNewTodo = e => {\r\n    e.preventDefault();\r\n\r\n    const newTodo = {\r\n      _id: uuid(),\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      tags: this.state.tags,\r\n      dueDate: new Date(this.state.dueDate),\r\n      date: new Date(),\r\n      completed: false\r\n    };\r\n    // Add todo via addTodo action\r\n    this.props.addTodo(newTodo);\r\n\r\n    // Close todoModal\r\n    this.toggleToDo();\r\n  };\r\n\r\n  render() {\r\n    const { categories } = this.props.category;\r\n    const catOptions = categories.map(category => {\r\n      return { value: category._id, label: category.name };\r\n    });\r\n\r\n    const { tags } = this.props.tag;\r\n    const tagsOptions = tags.map(tag => {\r\n      return { value: tag._id, label: tag.name };\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Button color=\"dark\" onClick={this.toggleToDo}>\r\n          Add ToDo\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.todoModal} toggle={this.toggleToDo}>\r\n          <ModalHeader toggle={this.toggleToDo}>Add Todo</ModalHeader>\r\n          <Form>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"name\">Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Add todo name\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"description\">Description</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"description\"\r\n                      id=\"description\"\r\n                      placeholder=\"Add todo descrption\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"category\">Category</Label>\r\n                    <InputGroup>\r\n                      <Select\r\n                        value={this.category}\r\n                        name=\"category\"\r\n                        id=\"category\"\r\n                        onChange={this.onCategoryChange}\r\n                        options={catOptions}\r\n                      />\r\n                      <InputGroupAddon addonType=\"append\">\r\n                        <Button color=\"secondary\" onClick={this.toggleCat}>\r\n                          <FontAwesomeIcon icon=\"plus\" />\r\n                        </Button>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                    <CategoryModal\r\n                      catModal={this.state.catModal}\r\n                      toggleCat={this.toggleCat.bind(this)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"tags\">Tags</Label>\r\n                    <InputGroup>\r\n                      <Select\r\n                        value={this.tags}\r\n                        isMulti\r\n                        name=\"tags\"\r\n                        id=\"tags\"\r\n                        onChange={this.onTagsChange}\r\n                        options={tagsOptions}\r\n                      />\r\n                      <InputGroupAddon addonType=\"append\">\r\n                        <Button color=\"secondary\" onClick={this.toggleTag}>\r\n                          <FontAwesomeIcon icon=\"plus\" />\r\n                        </Button>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                    <TagModal\r\n                      tagModal={this.state.tagModal}\r\n                      toggleCat={this.toggleTag.bind(this)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"dueDate\">Due Date</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dueDate\"\r\n                      id=\"dueDate\"\r\n                      placeholder=\"Add todo due date\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={this.addNewTodo}>\r\n                Add To Do\r\n              </Button>\r\n              <Button color=\"secondary\" onClick={this.toggleToDo}>\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTodoModal.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addTodo }\r\n)(TodoModal);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Filters from \"./Filters\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoModal from \"./TodoModal\";\r\n\r\nimport { getTodos } from \"../actions/todoActions\";\r\nimport { getCategories } from \"../actions/categoriesActions\";\r\nimport { getTags } from \"../actions/tagsActions\";\r\n\r\nclass ToDo extends Component {\r\n  componentDidMount() {\r\n    this.props.getTodos();\r\n    this.props.getCategories();\r\n    this.props.getTags();\r\n  }\r\n\r\n  state = {\r\n    filter: {\r\n      type: \"general\",\r\n      value: \"all\",\r\n      current: \"All\"\r\n    },\r\n    dropdownOpen: false\r\n  };\r\n\r\n  controlFilter = (type, value, current) => {\r\n    var newFilter = { type, value, current };\r\n    this.setState({\r\n      filter: newFilter\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"custom-fluid\">\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"font-weight-light\">Todo List</h2>\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <TodoModal />\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col sm=\"3\" className=\"filters\">\r\n            <Filters\r\n              filter={this.state.filter}\r\n              controlFilter={this.controlFilter}\r\n            />\r\n          </Col>\r\n          <Col sm=\"9\" className=\"todos\">\r\n            <Row>\r\n              <Col>\r\n                <p>\r\n                  Showing: <strong>{this.state.filter.current}</strong>\r\n                </p>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <ButtonDropdown\r\n                  size=\"sm\"\r\n                  isOpen={this.state.dropdownOpen}\r\n                  toggle={this.toggle}\r\n                >\r\n                  <DropdownToggle caret className=\"custom-filter\">\r\n                    Newest\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    <DropdownItem>Newest</DropdownItem>\r\n                    <DropdownItem>Oldest</DropdownItem>\r\n                    <DropdownItem>Due today</DropdownItem>\r\n                    <DropdownItem>Due tomorrow</DropdownItem>\r\n                    <DropdownItem>Due this week</DropdownItem>\r\n                    <DropdownItem>Ending Soon</DropdownItem>\r\n                  </DropdownMenu>\r\n                </ButtonDropdown>\r\n              </Col>\r\n            </Row>\r\n            <TodoList filter={this.state.filter} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nToDo.propTypes = {\r\n  getTodos: PropTypes.func.isRequired,\r\n  getCategories: PropTypes.func.isRequired,\r\n  getTags: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag,\r\n  filter: state.filter\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTodos, getCategories, getTags }\r\n)(ToDo);\r\n","import {\r\n  GET_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  TODOS_LOADING\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TODOS:\r\n      localStorage.setItem(\"todos\", JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [action.payload, ...state.todos]\r\n      };\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo._id !== action.payload)\r\n      };\r\n    case UPDATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((item, index) => {\r\n          if (index === action.index) {\r\n            // This isn't the item we care about - keep it as-is\r\n            return item;\r\n          }\r\n          // Otherwise, this is the one we want - return an updated value\r\n          return {\r\n            ...item,\r\n            ...action.item\r\n          };\r\n        })\r\n      };\r\n    case TODOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_CATEGORIES,\r\n  ADD_CATEGORY,\r\n  DELETE_CATEGORY,\r\n  UPDATE_CATEGORY,\r\n  CATEGORIES_LOADING\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES:\r\n      localStorage.setItem(\"categories\", JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        categories: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: [action.payload, ...state.categories]\r\n      };\r\n    case DELETE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: state.categories.filter(\r\n          category => category._id !== action.payload\r\n        )\r\n      };\r\n    case UPDATE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: [action.payload, ...state.categories]\r\n      };\r\n    case CATEGORIES_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_TAGS,\r\n  ADD_TAG,\r\n  DELETE_TAG,\r\n  UPDATE_TAG,\r\n  TAGS_LOADING\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  tags: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TAGS:\r\n      localStorage.setItem(\"tags\", JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        tags: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_TAG:\r\n      return {\r\n        ...state,\r\n        tags: [action.payload, ...state.tags]\r\n      };\r\n    case DELETE_TAG:\r\n      return {\r\n        ...state,\r\n        tags: state.tags.filter(tag => tag._id !== action.payload)\r\n      };\r\n    case UPDATE_TAG:\r\n      return {\r\n        ...state,\r\n        tags: [action.payload, ...state.tags]\r\n      };\r\n    case TAGS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport tagReducer from \"./tagReducer\";\r\n\r\nexport default combineReducers({\r\n  todo: todoReducer,\r\n  category: categoryReducer,\r\n  tag: tagReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nlet devTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nif (process.env.NODE_ENV === \"prod\" || process.env.NODE_ENV === \"production\") {\r\n  devTools = a => a;\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    devTools\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand, Container } from \"reactstrap\";\r\n\r\nclass AppNavbar extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"secondary\" dark expand=\"sm\">\r\n          <Container fluid>\r\n            <NavbarBrand href=\"/\">\r\n              <span className=\"text-primary\">{\"<\"}</span>\r\n              />\r\n            </NavbarBrand>\r\n            {/* Add Github */}\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppNavbar;\r\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport TodoContainer from \"./components/TodoContainer\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faEdit,\n  faCheck,\n  faTrashAlt,\n  faList,\n  faCalendarAlt,\n  faPlus,\n  faArchive,\n  faTh,\n  faHome,\n  faClipboardList,\n  faAddressBook,\n  faClipboard,\n  faBookmark,\n  faSuitcase,\n  faHandshake,\n  faUserCircle,\n  faInfoCircle,\n  faTags,\n  faFilter,\n  faSitemap\n} from \"@fortawesome/free-solid-svg-icons\";\nimport store from \"./store\";\n\nimport AppNavbar from \"./components/AppNavbar\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <AppNavbar />\n          <TodoContainer />\n        </Provider>\n      </div>\n    );\n  }\n}\n\nlibrary.add(\n  faEdit,\n  faCheck,\n  faTrashAlt,\n  faList,\n  faCalendarAlt,\n  faPlus,\n  faArchive,\n  faTh,\n  faHome,\n  faClipboardList,\n  faAddressBook,\n  faClipboard,\n  faBookmark,\n  faSuitcase,\n  faHandshake,\n  faUserCircle,\n  faInfoCircle,\n  faTags,\n  faFilter,\n  faSitemap\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}