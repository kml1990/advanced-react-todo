{"version":3,"sources":["components/Filters.js","actions/todoActions.js","actions/types.js","components/TodoList.js","actions/categoriesActions.js","components/CategoryModal.js","actions/tagsActions.js","components/TagModal.js","components/TodoModal.js","components/TodoContainer.js","reducers/todoReducer.js","reducers/categoryReducer.js","reducers/tagReducer.js","reducers/index.js","store.js","components/AppNavbar.js","App.js","serviceWorker.js","index.js"],"names":["Filters","state","currentFilter","getCategoryCount","categoryId","todos","filter","x","category","length","getCompletedCount","completed","getActiveCount","onFilterChange","type","value","current","_this","setState","props","controlFilter","_this2","this","todo","categories","tags","tag","react_default","a","createElement","index_es","icon","Nav","vertical","NavItem","NavLink","href","onClick","active","className","Badge","pill","toggleCategoryModal","size","map","cat","key","_id","name","toggleTagModal","concat","Component","connect","setTodosLoading","TodoList","onDeleteClick","id","deleteTodo","onCompleteClick","updateTodo","getCategoryName","find","getTagName","tagId","getDateState","date","today","Date","setHours","dueDate","getTime","filteredToDos","JSON","parse","ListGroup","react_transition_group","timeout","classNames","ListGroupItem","ListGroupItemHeading","color","bind","ListGroupItemText","description","Row","Col","label","Intl","DateTimeFormat","year","month","day","format","dispatch","newTodos","localStorage","getItem","setItem","stringify","payload","updatedTodo","updatedTodos","setCategoriesLoading","CategoryModal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCategoryCollapse","catCollapse","onChange","e","defineProperty","target","onCategorySubmited","preventDefault","nameInvalid","uuid","addCategory","onDeleteCategory","deleteCategory","Modal","isOpen","categoryModal","toggle","Form","onSubmit","ModalHeader","ModalBody","FormGroup","Label","for","Input","placeholder","invalid","FormFeedback","Collapse","ModalFooter","Button","unshift","newCategories","setTagsLoading","TagModal","tagCollapse","toggleTagCollapse","onTagSubmited","newTag","addTag","onDeleteTag","deleteTag","tagModal","newTags","TodoModal","todoModal","catModal","toggleTodoModal","onCategoryChange","onTagsChange","onTodoSubmited","addTodo","catOptions","tagsOptions","toggleToDo","InputGroup","react_select_esm","options","InputGroupAddon","addonType","isMulti","addNewTodo","ToDo","newFilter","prevState","dropdownOpen","getTodos","getCategories","getTags","Container","fluid","components_TodoModal","sm","components_Filters","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","components_TodoList","components_CategoryModal","components_TagModal","axios","get","then","res","data","initialState","loading","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","item","index","middleware","thunk","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","compose","applyMiddleware","apply","AppNavbar","Navbar","dark","expand","NavbarBrand","App","es","components_AppNavbar","TodoContainer","library","add","faEdit","faCheck","faTrashAlt","faList","faCalendarAlt","faPlus","faArchive","faTh","faHome","faClipboardList","faAddressBook","faClipboard","faBookmark","faSuitcase","faHandshake","faUserCircle","faInfoCircle","faTags","faFilter","faSitemap","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d007a15a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Nav, NavItem, NavLink, Badge } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Filters extends Component {\r\n  state = {\r\n    currentFilter: \"All\"\r\n  };\r\n\r\n  getCategoryCount = (categoryId, todos) => {\r\n    const todoCount = todos.filter(x => x.category === categoryId).length;\r\n    return todoCount;\r\n  };\r\n\r\n  getCompletedCount = todos => {\r\n    const todoCompletedCount = todos.filter(x => x.completed === true).length;\r\n    return todoCompletedCount;\r\n  };\r\n\r\n  getActiveCount = todos => {\r\n    const todoActiveCount = todos.filter(x => x.completed === false).length;\r\n    return todoActiveCount;\r\n  };\r\n\r\n  onFilterChange = (type, value, current) => {\r\n    this.setState({\r\n      currentFilter: current\r\n    });\r\n    this.props.controlFilter(type, value, current);\r\n  };\r\n\r\n  render() {\r\n    const { todos } = this.props.todo;\r\n    const { categories } = this.props.category;\r\n    const { tags } = this.props.tag;\r\n\r\n    return (\r\n      <div>\r\n        <p>\r\n          <FontAwesomeIcon icon=\"filter\" /> Filters\r\n        </p>\r\n        <Nav vertical>\r\n          <NavItem>\r\n            <NavLink\r\n              href=\"#\"\r\n              onClick={() => this.onFilterChange(\"general\", \"all\", \"All\")}\r\n              active={this.state.currentFilter === \"All\"}\r\n            >\r\n              All{\" \"}\r\n              <span className=\"float-right\">\r\n                <Badge pill>{todos.length}</Badge>\r\n              </span>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              href=\"#\"\r\n              onClick={() => this.onFilterChange(\"completed\", false, \"Active\")}\r\n              active={this.state.currentFilter === \"Active\"}\r\n            >\r\n              Active{\" \"}\r\n              <span className=\"float-right\">\r\n                <Badge pill>{this.getActiveCount(todos)}</Badge>\r\n              </span>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              href=\"#\"\r\n              onClick={() =>\r\n                this.onFilterChange(\"completed\", true, \"Completed\")\r\n              }\r\n              active={this.state.currentFilter === \"Completed\"}\r\n            >\r\n              Completed{\" \"}\r\n              <span className=\"float-right\">\r\n                <Badge pill>{this.getCompletedCount(todos)}</Badge>\r\n              </span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <hr />\r\n        <p>\r\n          <FontAwesomeIcon icon=\"sitemap\" /> Categories{\" \"}\r\n          <a href=\"#\" className=\"float-right\" onClick={this.props.toggleCategoryModal}>\r\n            <FontAwesomeIcon size=\"sm\" icon=\"plus\" />\r\n          </a>\r\n        </p>\r\n        <Nav vertical>\r\n          {categories.map(cat => (\r\n            <NavItem key={cat._id}>\r\n              <NavLink\r\n                href=\"#\"\r\n                onClick={() =>\r\n                  this.onFilterChange(\"category\", cat._id, cat.name)\r\n                }\r\n                active={this.state.currentFilter === cat.name}\r\n              >\r\n                {cat.name}\r\n                <span className=\"float-right\">\r\n                  <Badge pill>{this.getCategoryCount(cat._id, todos)}</Badge>\r\n                </span>\r\n              </NavLink>\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n        <hr />\r\n        <p>\r\n          <FontAwesomeIcon icon=\"tags\" /> Tags{\" \"}\r\n          <a href=\"#\" className=\"float-right\" onClick={this.props.toggleTagModal}>\r\n            <FontAwesomeIcon size=\"sm\" icon=\"plus\" />\r\n          </a>\r\n        </p>\r\n        {tags.map(tag => (\r\n          <a\r\n            key={tag._id}\r\n            href=\"#\"\r\n            className={`tags-list ${\r\n              this.state.currentFilter === tag.name ? \"active\" : \"\"\r\n            }`}\r\n            onClick={() => this.onFilterChange(\"tag\", tag._id, tag.name)}\r\n          >\r\n            <Badge pill>{tag.name}</Badge>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilters.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(mapStateToProps)(Filters);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  FILTER_TODO,\r\n  TODOS_LOADING\r\n} from \"./types.js\";\r\n\r\nexport const getTodos = () => dispatch => {\r\n  dispatch(setTodosLoading());\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n\r\n  if (todos.length) {\r\n    dispatch({\r\n      type: GET_TODOS,\r\n      payload: todos\r\n    });\r\n  } else {\r\n    axios.get(\"data/todos.json\").then(res =>\r\n      dispatch({\r\n        type: GET_TODOS,\r\n        payload: res.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const addTodo = todo => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  todos.unshift(todo);\r\n  localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  dispatch({\r\n    type: ADD_TODO,\r\n    payload: todo\r\n  });\r\n};\r\n\r\nexport const deleteTodo = id => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  const newTodos = todos.filter(todo => {\r\n    return todo._id !== id;\r\n  });\r\n  localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n\r\n  dispatch({\r\n    type: DELETE_TODO,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const updateTodo = updatedTodo => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  const updatedTodos = todos.map(todo => {\r\n    if (todo._id === updatedTodo._id) {\r\n      return (todo = updatedTodo);\r\n    }\r\n    return todo;\r\n  });\r\n  localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\r\n\r\n  dispatch({\r\n    type: UPDATE_TODO,\r\n    payload: updatedTodos\r\n  });\r\n};\r\n\r\nexport const filterTodos = (type, value) => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  const filteredTodos = todos.filter(todo => {\r\n    if (type === \"general\" && value === \"all\") {\r\n      // return all\r\n      return todo;\r\n    } else if (type === \"tag\") {\r\n      // search by tags\r\n      let tags = JSON.parse(todo.tags);\r\n      let hasTag = tags.filter(x => x.value === value).length !== 0;\r\n      if (hasTag) {\r\n        return todo;\r\n      }\r\n    } else {\r\n      return todo[type] === value;\r\n    }\r\n  });\r\n\r\n  dispatch({\r\n    type: FILTER_TODO,\r\n    payload: filteredTodos\r\n  });\r\n};\r\n\r\nexport const setTodosLoading = () => {\r\n  return {\r\n    type: TODOS_LOADING\r\n  };\r\n};\r\n","/* CATEGORIES */\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\r\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\r\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\r\n\r\nexport const CATEGORIES_LOADING = \"CATEGORIES_LOADING\";\r\n\r\n/* TAGS */\r\nexport const GET_TAGS = \"GET_TAGS\";\r\nexport const ADD_TAG = \"ADD_TAG\";\r\nexport const DELETE_TAG = \"DELETE_TAG\";\r\n\r\nexport const TAGS_LOADING = \"TAGS_LOADING\";\r\n\r\n/* TODOS */\r\nexport const GET_TODOS = \"GET_TODOS\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const FILTER_TODO = \"FILTER_TODO\";\r\n\r\nexport const TODOS_LOADING = \"TODOS_LOADING\";\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  Badge,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { deleteTodo, updateTodo } from \"../actions/todoActions\";\r\n\r\nclass TodoList extends Component {\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteTodo(id);\r\n  };\r\n\r\n  onCompleteClick = (todo, completed) => {\r\n    todo.completed = !completed;\r\n    this.props.updateTodo(todo);\r\n  };\r\n\r\n  getCategoryName = (categoryId, categories) => {\r\n    const cat = categories.find(x => x._id === categoryId);\r\n    if (typeof cat !== \"undefined\") {\r\n      return cat[\"name\"];\r\n    }\r\n  };\r\n\r\n  getTagName = (tagId, tags) => {\r\n    const tag = tags.find(x => x._id === tagId);\r\n    if (typeof tag !== \"undefined\") {\r\n      return tag[\"name\"];\r\n    }\r\n  };\r\n\r\n  getDateState = date => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let dueDate = new Date(date);\r\n    dueDate.setHours(0, 0, 0, 0);\r\n\r\n    if (dueDate.getTime() > today.getTime()) {\r\n      return \"text-primary\";\r\n    } else if (dueDate.getTime() === today.getTime()) {\r\n      return \"text-warning\";\r\n    } else {\r\n      return \"text-danger\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { todos } = this.props.todo;\r\n    let filteredToDos = todos.filter(todo => {\r\n      let type = this.props.filter.type;\r\n      let value = this.props.filter.value;\r\n      if (type === \"general\" && value === \"all\") {\r\n        // return all\r\n        return todo;\r\n      } else if (type === \"tag\") {\r\n        // search by tags\r\n        let tags = JSON.parse(todo.tags);\r\n        let hasTag = tags.filter(x => x.value === value).length !== 0;\r\n        if (hasTag) {\r\n          return todo;\r\n        }\r\n      } else {\r\n        return todo[type] === value;\r\n      }\r\n    });\r\n    //const { todos } = this.props.todo;\r\n    const { categories } = this.props.category;\r\n\r\n    return (\r\n      <ListGroup className=\"todo\">\r\n      <TransitionGroup className=\"todo__list\">\r\n          {filteredToDos ? (\r\n            filteredToDos.map(todo => (\r\n              <CSSTransition key={todo._id} timeout={500} classNames=\"fade\">\r\n                <ListGroupItem\r\n                  className={\r\n                    todo.completed\r\n                      ? \"toDo__list-item completed\"\r\n                      : \"toDo__list-item\"\r\n                  }\r\n                >\r\n                  <ListGroupItemHeading>\r\n                    <span className=\"toDo__title\">{todo.name}</span>{\" \"}\r\n                    <Badge color=\"secondary\">\r\n                      {this.getCategoryName(todo.category, categories)}\r\n                    </Badge>\r\n                    <div className=\"float-right toDo__actions\">\r\n                      <a\r\n                        className=\"text-primary\"\r\n                        href=\"#\"\r\n                        onClick={this.onCompleteClick.bind(\r\n                          this,\r\n                          todo,\r\n                          todo.completed\r\n                        )}\r\n                      >\r\n                        <FontAwesomeIcon icon=\"check\" />\r\n                      </a>\r\n                      <a className=\"text-primary\" href=\"#\">\r\n                        <FontAwesomeIcon icon=\"edit\" />\r\n                      </a>\r\n                      <a\r\n                        className=\"text-primary\"\r\n                        href=\"#\"\r\n                        onClick={this.onDeleteClick.bind(this, todo._id)}\r\n                      >\r\n                        <FontAwesomeIcon icon=\"trash-alt\" />\r\n                      </a>\r\n                    </div>\r\n                  </ListGroupItemHeading>\r\n                  <ListGroupItemText className=\"truncate\">\r\n                    {todo.description}\r\n                  </ListGroupItemText>\r\n                  <div className=\"list-goup-item-footer\">\r\n                    <Row>\r\n                      <Col className=\"toDo__tags\">\r\n                        <div>\r\n                          {(todo.tags.length !== 0 ? JSON.parse(todo.tags).map(tag => (\r\n                            <Badge key={tag.value} color=\"secondary\">\r\n                              {tag.label}\r\n                            </Badge>\r\n                          )) : \"\")}\r\n                        </div>\r\n                      </Col>\r\n                      <Col>\r\n                        <div className=\"text-right\">\r\n                          <h6 className={this.getDateState(todo.dueDate)}>\r\n                            <strong>Due: </strong>{\" \"}\r\n                            {new Intl.DateTimeFormat(\"en-GB\", {\r\n                              year: \"numeric\",\r\n                              month: \"short\",\r\n                              day: \"2-digit\"\r\n                            }).format(new Date(todo.dueDate))}\r\n                          </h6>\r\n                          <h6>\r\n                            <strong>Added: </strong>{\" \"}\r\n                            {new Intl.DateTimeFormat(\"en-GB\", {\r\n                              year: \"numeric\",\r\n                              month: \"short\",\r\n                              day: \"2-digit\"\r\n                            }).format(new Date(todo.date))}\r\n                          </h6>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </ListGroupItem>\r\n              </CSSTransition>\r\n            ))\r\n          ) : (\r\n            <h1>No todos</h1>\r\n          )}\r\n        </TransitionGroup>\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteTodo, updateTodo }\r\n)(TodoList);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_CATEGORIES,\r\n  ADD_CATEGORY,\r\n  DELETE_CATEGORY,\r\n  CATEGORIES_LOADING\r\n} from \"./types.js\";\r\n\r\nexport const getCategories = () => dispatch => {\r\n  dispatch(setCategoriesLoading());\r\n  const categories = JSON.parse(localStorage.getItem(\"categories\")) || [];\r\n\r\n  if (categories.length) {\r\n    dispatch({\r\n      type: GET_CATEGORIES,\r\n      payload: categories\r\n    });\r\n  } else {\r\n    axios.get(\"data/categories.json\").then(res =>\r\n      dispatch({\r\n        type: GET_CATEGORIES,\r\n        payload: res.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const addCategory = category => dispatch => {\r\n  const categories = JSON.parse(localStorage.getItem(\"categories\")) || [];\r\n  categories.unshift(category);\r\n  localStorage.setItem(\"categories\", JSON.stringify(categories));\r\n  dispatch({\r\n    type: ADD_CATEGORY,\r\n    payload: category\r\n  });\r\n};\r\n\r\nexport const deleteCategory = id => dispatch => {\r\n  const categories = JSON.parse(localStorage.getItem(\"categories\")) || [];\r\n  const newCategories = categories.filter(category => {\r\n    return category._id !== id;\r\n  });\r\n  localStorage.setItem(\"categories\", JSON.stringify(newCategories));\r\n\r\n  dispatch({\r\n    type: DELETE_CATEGORY,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const setCategoriesLoading = () => {\r\n  return {\r\n    type: CATEGORIES_LOADING\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport uuid from \"uuid\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Label,\r\n  Input,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { addCategory, deleteCategory } from \"../actions/categoriesActions\";\r\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass CategoryModal extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      catCollapse: false,\r\n      nameInvalid: false,\r\n      name: \"\",\r\n      description: \"\",\r\n    };\r\n  }\r\n  \r\n\r\n  toggleCategoryCollapse = () => {\r\n    this.setState({\r\n      catCollapse: !this.state.catCollapse\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n  onCategorySubmited = e => {\r\n    e.preventDefault();\r\n    if(this.state.name === \"\") {\r\n      this.setState({\r\n        nameInvalid: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        nameInvalid: false\r\n      }, () => {\r\n        const category = {\r\n          _id: uuid(),\r\n          name: this.state.name,\r\n          description: this.state.description\r\n        };\r\n        // Add todo via newCategory action\r\n        this.props.addCategory(category);\r\n    \r\n        /* Close category modal */\r\n        this.props.toggleCategoryModal();\r\n      })\r\n    }\r\n  };\r\n\r\n  onDeleteCategory = id => {\r\n    this.props.deleteCategory(id);\r\n  };\r\n\r\n  render() {\r\n    const { categories } = this.props.category;\r\n    return (\r\n      <Modal isOpen={this.props.categoryModal} toggle={this.props.toggleCategoryModal}>\r\n        <Form onSubmit={this.onCategorySubmited}>\r\n          <ModalHeader>Add Category </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label for=\"name\">Name*</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Add category name\"\r\n                onChange={this.onChange}\r\n                invalid={this.state.nameInvalid}\r\n              />\r\n              <FormFeedback>This field is required</FormFeedback>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"description\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                placeholder=\"Add category description\"\r\n                onChange={this.onChange}\r\n              />\r\n            </FormGroup>\r\n            <Collapse isOpen={this.state.catCollapse}>\r\n              <h5>Existing categories</h5>\r\n              <br />\r\n              <ListGroup>\r\n                {categories.map(cat => (\r\n                  <ListGroupItem key={cat._id}>\r\n                    <strong>{cat.name}</strong> - {cat.description}\r\n                    <a\r\n                      className=\"text-danger float-right\"\r\n                      href=\"#\"\r\n                      onClick={this.onDeleteCategory.bind(this, cat._id)}\r\n                    >\r\n                      <FontAwesomeIcon icon=\"trash-alt\" />\r\n                    </a>\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n            </Collapse>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggleCategoryCollapse}>\r\n              Show/Edit existing categories\r\n            </Button>\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Add Category\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.props.toggleCategoryModal}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nCategoryModal.propTypes = {\r\n  category: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  category: state.category\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addCategory, deleteCategory }\r\n)(CategoryModal);\r\n","import axios from \"axios\";\r\nimport { GET_TAGS, ADD_TAG, DELETE_TAG, TAGS_LOADING } from \"./types.js\";\r\n\r\nexport const getTags = () => dispatch => {\r\n  dispatch(setTagsLoading());\r\n  const tags = JSON.parse(localStorage.getItem(\"tags\")) || [];\r\n  if (tags.length) {\r\n    dispatch({\r\n      type: GET_TAGS,\r\n      payload: tags\r\n    });\r\n  } else {\r\n    axios.get(\"data/tags.json\").then(res =>\r\n      dispatch({\r\n        type: GET_TAGS,\r\n        payload: res.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const addTag = tag => dispatch => {\r\n  const tags = JSON.parse(localStorage.getItem(\"tags\")) || [];\r\n  tags.unshift(tag);\r\n  localStorage.setItem(\"tags\", JSON.stringify(tags));\r\n  dispatch({\r\n    type: ADD_TAG,\r\n    payload: tag\r\n  });\r\n};\r\n\r\nexport const deleteTag = id => dispatch => {\r\n  const tags = JSON.parse(localStorage.getItem(\"tags\")) || [];\r\n  const newTags = tags.filter(tag => {\r\n    return tag._id !== id;\r\n  });\r\n  localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n\r\n  dispatch({\r\n    type: DELETE_TAG,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const setTagsLoading = () => {\r\n  return {\r\n    type: TAGS_LOADING\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport uuid from \"uuid\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Label,\r\n  Input,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { addTag, deleteTag } from \"../actions/tagsActions\";\r\n\r\nclass TagModal extends Component {\r\n  state = {\r\n    tagCollapse: false,\r\n    nameInvalid: false,\r\n    name: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  toggleTagCollapse = () => {\r\n    this.setState({\r\n      tagCollapse: !this.state.tagCollapse\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onTagSubmited = e => {\r\n    e.preventDefault();\r\n    if(this.state.name === \"\") {\r\n      this.setState({\r\n        nameInvalid: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        nameInvalid: false\r\n      }, () => {\r\n        const newTag = {\r\n          _id: uuid(),\r\n          name: this.state.name,\r\n          description: this.state.description\r\n        };\r\n        // Add todo via newCategory action\r\n        this.props.addTag(newTag);\r\n    \r\n        /* Close category modal */\r\n        this.props.toggleTagModal();\r\n      })\r\n    }\r\n  };\r\n\r\n  onDeleteTag = id => {\r\n    this.props.deleteTag(id);\r\n  };\r\n\r\n  render() {\r\n    const { tags } = this.props.tag;\r\n    return (\r\n      <Modal isOpen={this.props.tagModal} toggle={this.props.toggleTagModal}>\r\n        <Form onSubmit={this.onTagSubmited}>\r\n          <ModalHeader>Add Tag </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label for=\"name\">Name*</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Add tag name\"\r\n                onChange={this.onChange}\r\n                invalid={this.state.nameInvalid}\r\n              />\r\n              <FormFeedback>This field is required</FormFeedback>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"description\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                placeholder=\"Add tag description\"\r\n                onChange={this.onChange}\r\n              />\r\n            </FormGroup>\r\n            <Collapse isOpen={this.state.tagCollapse}>\r\n              <h5>Existing tags</h5>\r\n              <br />\r\n              <ListGroup>\r\n                {tags.map(tag => (\r\n                  <ListGroupItem key={tag._id}>\r\n                    <strong>{tag.name}</strong> - {tag.description}\r\n                    <a\r\n                      className=\"text-danger float-right\"\r\n                      href=\"#\"\r\n                      onClick={this.onDeleteTag.bind(this, tag._id)}\r\n                    >\r\n                      <FontAwesomeIcon icon=\"trash-alt\" />\r\n                    </a>\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n            </Collapse>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggleTagCollapse}>\r\n              Show/Edit existing tags\r\n            </Button>\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Add Tag\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.props.toggleTagModal}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nTagModal.propTypes = {\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addTag, deleteTag }\r\n)(TagModal);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Select from \"react-select\";\r\nimport uuid from \"uuid\";\r\n\r\nimport { addTodo } from \"../actions/todoActions\";\r\n\r\nimport CategoryModal from \"./CategoryModal\";\r\nimport TagModal from \"./TagModal\";\r\n\r\nclass TodoModal extends Component {\r\n  state = {\r\n    todoModal: false,\r\n    catModal: false,\r\n    tagModal: false,\r\n    nameInvalid: false,\r\n    name: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    tags: [],\r\n    dueDate: new Date()\r\n  };\r\n\r\n  toggleTodoModal = () => {\r\n    this.setState({\r\n      todoModal: !this.state.todoModal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onCategoryChange = e => {\r\n    this.setState({\r\n      category: e.value\r\n    });\r\n  };\r\n\r\n  onTagsChange = e => {\r\n    this.setState({\r\n      tags: JSON.stringify(e)\r\n    });\r\n  };\r\n\r\n  onTodoSubmited = e => {\r\n    e.preventDefault();\r\n    if(this.state.name === \"\") {\r\n      this.setState({\r\n        nameInvalid: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        nameInvalid: false\r\n      }, () => {\r\n        const todo = {\r\n          _id: uuid(),\r\n          name: this.state.name,\r\n          description: this.state.description,\r\n          category: this.state.category,\r\n          tags: this.state.tags,\r\n          dueDate: new Date(this.state.dueDate),\r\n          date: new Date(),\r\n          completed: false\r\n        };\r\n        // Add todo via addTodo action\r\n        this.props.addTodo(todo);\r\n    \r\n        /* Close category modal */\r\n        this.toggleTodoModal();\r\n      })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { categories } = this.props.category;\r\n    const catOptions = categories.map(category => {\r\n      return { value: category._id, label: category.name };\r\n    });\r\n\r\n    const { tags } = this.props.tag;\r\n    const tagsOptions = tags.map(tag => {\r\n      return { value: tag._id, label: tag.name };\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <Button color=\"dark\" onClick={this.toggleTodoModal}>\r\n          Add ToDo\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.todoModal} toggle={this.toggleToDo}>\r\n          <ModalHeader toggle={this.toggleToDo}>Add Todo</ModalHeader>\r\n          <Form onSubmit={this.onTodoSubmited}>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"name\">Name*</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Add todo name\"\r\n                      onChange={this.onChange}\r\n                      invalid={this.state.nameInvalid}\r\n                      />\r\n                      <FormFeedback>This field is required</FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"description\">Description</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"description\"\r\n                      id=\"description\"\r\n                      placeholder=\"Add todo descrption\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"category\">Category</Label>\r\n                    <InputGroup>\r\n                      <Select\r\n                        value={this.category}\r\n                        name=\"category\"\r\n                        id=\"category\"\r\n                        onChange={this.onCategoryChange}\r\n                        options={catOptions}\r\n                      />\r\n                      <InputGroupAddon addonType=\"append\">\r\n                        <Button color=\"secondary\" onClick={this.props.toggleCategoryModal}>\r\n                          <FontAwesomeIcon icon=\"plus\" />\r\n                        </Button>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"tags\">Tags</Label>\r\n                    <InputGroup>\r\n                      <Select\r\n                        value={this.tags}\r\n                        isMulti\r\n                        name=\"tags\"\r\n                        id=\"tags\"\r\n                        onChange={this.onTagsChange}\r\n                        options={tagsOptions}\r\n                      />\r\n                      <InputGroupAddon addonType=\"append\">\r\n                        <Button color=\"secondary\" onClick={this.props.toggleTagModal}>\r\n                          <FontAwesomeIcon icon=\"plus\" />\r\n                        </Button>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"dueDate\">Due Date</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dueDate\"\r\n                      id=\"dueDate\"\r\n                      placeholder=\"Add todo due date\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={this.addNewTodo}>\r\n                Add To Do\r\n              </Button>\r\n              <Button color=\"secondary\" onClick={this.toggleToDo}>\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTodoModal.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addTodo }\r\n)(TodoModal);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Filters from \"./Filters\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoModal from \"./TodoModal\";\r\nimport CategoryModal from \"./CategoryModal\";\r\nimport TagModal from \"./TagModal\";\r\n\r\nimport { getTodos } from \"../actions/todoActions\";\r\nimport { getCategories } from \"../actions/categoriesActions\";\r\nimport { getTags } from \"../actions/tagsActions\";\r\n\r\nclass ToDo extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      categoryModal: false,\r\n      tagModal: false,\r\n      filter: {\r\n        type: \"general\",\r\n        value: \"all\",\r\n        current: \"All\"\r\n      },\r\n      dropdownOpen: false\r\n    }\r\n  }\r\n\r\n  toggleCategoryModal = () => {\r\n    this.setState({\r\n      categoryModal: !this.state.categoryModal\r\n    });\r\n  };\r\n\r\n  toggleTagModal = () => {\r\n    this.setState({\r\n      tagModal: !this.state.tagModal\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getTodos();\r\n    this.props.getCategories();\r\n    this.props.getTags();\r\n  }\r\n\r\n  controlFilter = (type, value, current) => {\r\n    const newFilter = { type, value, current };\r\n    this.setState({\r\n      filter: newFilter\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"custom-fluid\">\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"font-weight-light\">Todo List</h2>\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <TodoModal toggleCategoryModal={this.toggleCategoryModal} toggleTagModal={this.toggleTagModal}/>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col sm=\"3\" className=\"filters\">\r\n            <Filters\r\n              filter={this.state.filter}\r\n              controlFilter={this.controlFilter}\r\n              toggleCategoryModal={this.toggleCategoryModal} \r\n              categoryModal={this.state.categoryModal} \r\n              toggleTagModal={this.toggleTagModal}\r\n              tagModal={this.state.tagModal}\r\n            />\r\n          </Col>\r\n          <Col sm=\"9\">\r\n            <Row>\r\n              <Col>\r\n                <p>\r\n                  Showing: <strong>{this.state.filter.current}</strong>\r\n                </p>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <ButtonDropdown\r\n                  size=\"sm\"\r\n                  isOpen={this.state.dropdownOpen}\r\n                  toggle={this.toggle}\r\n                >\r\n                  <DropdownToggle caret className=\"custom-filter\">\r\n                    Newest\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    <DropdownItem>Newest</DropdownItem>\r\n                    <DropdownItem>Oldest</DropdownItem>\r\n                    <DropdownItem>Due today</DropdownItem>\r\n                    <DropdownItem>Due tomorrow</DropdownItem>\r\n                    <DropdownItem>Due this week</DropdownItem>\r\n                    <DropdownItem>Ending Soon</DropdownItem>\r\n                  </DropdownMenu>\r\n                </ButtonDropdown>\r\n              </Col>\r\n            </Row>\r\n            <TodoList filter={this.state.filter} />\r\n          </Col>\r\n        </Row>\r\n        <CategoryModal categoryModal={this.state.categoryModal} toggleCategoryModal={this.toggleCategoryModal} />\r\n        <TagModal tagModal={this.state.tagModal} toggleTagModal={this.toggleTagModal} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nToDo.propTypes = {\r\n  getTodos: PropTypes.func.isRequired,\r\n  getCategories: PropTypes.func.isRequired,\r\n  getTags: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag,\r\n  filter: state.filter\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTodos, getCategories, getTags }\r\n)(ToDo);\r\n","import {\r\n  GET_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  TODOS_LOADING,\r\n  FILTER_TODO\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TODOS:\r\n      localStorage.setItem(\"todos\", JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [action.payload, ...state.todos]\r\n      };\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo._id !== action.payload)\r\n      };\r\n    case UPDATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((item, index) => {\r\n          if (index === action.index) {\r\n            // This isn't the item we care about - keep it as-is\r\n            return item;\r\n          }\r\n          // Otherwise, this is the one we want - return an updated value\r\n          return {\r\n            ...item,\r\n            ...action.item\r\n          };\r\n        })\r\n      };\r\n    case FILTER_TODO:\r\n      return {\r\n        ...state,\r\n        todos: action.payload\r\n      };\r\n    case TODOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_CATEGORIES,\r\n  ADD_CATEGORY,\r\n  DELETE_CATEGORY,\r\n  CATEGORIES_LOADING\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES:\r\n      localStorage.setItem(\"categories\", JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        categories: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: [action.payload, ...state.categories]\r\n      };\r\n    case DELETE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: state.categories.filter(\r\n          category => category._id !== action.payload\r\n        )\r\n      };\r\n    case CATEGORIES_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_TAGS,\r\n  ADD_TAG,\r\n  DELETE_TAG,\r\n  TAGS_LOADING\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  tags: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TAGS:\r\n      localStorage.setItem(\"tags\", JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        tags: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_TAG:\r\n      return {\r\n        ...state,\r\n        tags: [action.payload, ...state.tags]\r\n      };\r\n    case DELETE_TAG:\r\n      return {\r\n        ...state,\r\n        tags: state.tags.filter(tag => tag._id !== action.payload)\r\n      };\r\n    case TAGS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport tagReducer from \"./tagReducer\";\r\n\r\nexport default combineReducers({\r\n  todo: todoReducer,\r\n  category: categoryReducer,\r\n  tag: tagReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nlet devTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nif (process.env.NODE_ENV === \"prod\" || process.env.NODE_ENV === \"production\") {\r\n  devTools = a => a;\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    devTools\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand, Container } from \"reactstrap\";\r\n\r\nclass AppNavbar extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"secondary\" dark expand=\"sm\">\r\n          <Container fluid>\r\n            <NavbarBrand href=\"/\">\r\n              <span className=\"text-primary\">{\"<\"}</span>\r\n              />\r\n            </NavbarBrand>\r\n            {/* Add Github */}\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppNavbar;\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport TodoContainer from \"./components/TodoContainer\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faEdit,\r\n  faCheck,\r\n  faTrashAlt,\r\n  faList,\r\n  faCalendarAlt,\r\n  faPlus,\r\n  faArchive,\r\n  faTh,\r\n  faHome,\r\n  faClipboardList,\r\n  faAddressBook,\r\n  faClipboard,\r\n  faBookmark,\r\n  faSuitcase,\r\n  faHandshake,\r\n  faUserCircle,\r\n  faInfoCircle,\r\n  faTags,\r\n  faFilter,\r\n  faSitemap\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport store from \"./store\";\r\n\r\nimport AppNavbar from \"./components/AppNavbar\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Provider store={store}>\r\n          <AppNavbar />\r\n          <TodoContainer />\r\n        </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlibrary.add(\r\n  faEdit,\r\n  faCheck,\r\n  faTrashAlt,\r\n  faList,\r\n  faCalendarAlt,\r\n  faPlus,\r\n  faArchive,\r\n  faTh,\r\n  faHome,\r\n  faClipboardList,\r\n  faAddressBook,\r\n  faClipboard,\r\n  faBookmark,\r\n  faSuitcase,\r\n  faHandshake,\r\n  faUserCircle,\r\n  faInfoCircle,\r\n  faTags,\r\n  faFilter,\r\n  faSitemap\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./styles/index.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}