{"version":3,"sources":["components/Filters.js","actions/todoActions.js","actions/types.js","components/TodoItem.js","components/TodoList.js","components/TodoModal.js","actions/categoriesActions.js","components/CategoryModal.js","actions/tagsActions.js","components/TagModal.js","components/TodoContainer.js","reducers/todoReducer.js","reducers/categoryReducer.js","reducers/tagReducer.js","reducers/index.js","store.js","components/AppNavbar.js","App.js","serviceWorker.js","index.js"],"names":["Filters","state","currentFilter","getCategoryCount","categoryId","todos","filter","x","category","length","getCompletedCount","completed","getActiveCount","onFilterChange","type","value","current","_this","setState","props","controlFilter","_this2","this","todo","categories","tags","tag","react_default","a","createElement","index_es","icon","Nav","vertical","NavItem","NavLink","href","onClick","active","className","Badge","pill","toggleCategoryModal","size","map","cat","key","_id","name","toggleTagModal","concat","Component","connect","deleteTodo","id","dispatch","newTodos","JSON","parse","localStorage","getItem","setItem","stringify","payload","updateTodo","updatedTodo","updatedTodos","index","setTodosLoading","TodoItem","onDeleteClick","onCompleteClick","getCategoryName","find","getTagName","tagId","getDateState","date","today","Date","setHours","dueDate","getTime","todoItem","ListGroupItem","ListGroupItemHeading","color","bind","editTodo","ListGroupItemText","description","Row","Col","label","Intl","DateTimeFormat","year","month","day","format","TodoList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filteredTodos","ListGroup","react_transition_group","timeout","classNames","components_TodoItem","TodoModal","onInputChange","e","assign","target","onCategoryChange","onTagsChange","onTodoSubmited","preventDefault","nameInvalid","_this$state$todoItem","uuid","addTodo","toggleTodoModal","onTodoModalClose","prevProps","prevState","_prevProps$todoItem","catOptions","tagsOptions","selectedTags","Modal","isOpen","todoModal","toggle","ModalHeader","toggleToDo","Form","onSubmit","ModalBody","FormGroup","Label","for","Input","placeholder","onChange","invalid","FormFeedback","InputGroup","react_select_esm","option","options","InputGroupAddon","addonType","Button","isMulti","ModalFooter","addNewTodo","unshift","setCategoriesLoading","CategoryModal","toggleCategoryCollapse","catCollapse","defineProperty","onCategorySubmited","addCategory","onDeleteCategory","deleteCategory","categoryModal","Collapse","newCategories","setTagsLoading","TagModal","tagCollapse","toggleTagCollapse","onTagSubmited","newTag","addTag","onDeleteTag","deleteTag","tagModal","newTags","ToDo","newFilter","dropdownOpen","getTodos","getCategories","getTags","Container","fluid","sm","components_Filters","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","components_TodoList","components_TodoModal","components_CategoryModal","components_TagModal","axios","get","then","res","data","initialState","loading","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","item","middleware","thunk","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","compose","applyMiddleware","apply","AppNavbar","Navbar","dark","expand","NavbarBrand","App","es","components_AppNavbar","TodoContainer","library","add","faEdit","faCheck","faTrashAlt","faList","faCalendarAlt","faPlus","faArchive","faTh","faHome","faClipboardList","faAddressBook","faClipboard","faBookmark","faSuitcase","faHandshake","faUserCircle","faInfoCircle","faTags","faFilter","faSitemap","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.46943d9b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Nav, NavItem, NavLink, Badge } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Filters extends Component {\r\n  state = {\r\n    currentFilter: \"All\"\r\n  };\r\n\r\n  getCategoryCount = (categoryId, todos) => {\r\n    const todoCount = todos.filter(x => x.category === categoryId).length;\r\n    return todoCount;\r\n  };\r\n\r\n  getCompletedCount = todos => {\r\n    const todoCompletedCount = todos.filter(x => x.completed === true).length;\r\n    return todoCompletedCount;\r\n  };\r\n\r\n  getActiveCount = todos => {\r\n    const todoActiveCount = todos.filter(x => x.completed === false).length;\r\n    return todoActiveCount;\r\n  };\r\n\r\n  onFilterChange = (type, value, current) => {\r\n    this.setState({\r\n      currentFilter: current\r\n    });\r\n    this.props.controlFilter(type, value, current);\r\n  };\r\n\r\n  render() {\r\n    const { todos } = this.props.todo;\r\n    const { categories } = this.props.category;\r\n    const { tags } = this.props.tag;\r\n\r\n    return (\r\n      <div>\r\n        <p>\r\n          <FontAwesomeIcon icon=\"filter\" /> Filters\r\n        </p>\r\n        <Nav vertical>\r\n          <NavItem>\r\n            <NavLink\r\n              href=\"#\"\r\n              onClick={() => this.onFilterChange(\"general\", \"all\", \"All\")}\r\n              active={this.state.currentFilter === \"All\"}\r\n            >\r\n              All{\" \"}\r\n              <span className=\"float-right\">\r\n                <Badge pill>{todos.length}</Badge>\r\n              </span>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              href=\"#\"\r\n              onClick={() => this.onFilterChange(\"completed\", false, \"Active\")}\r\n              active={this.state.currentFilter === \"Active\"}\r\n            >\r\n              Active{\" \"}\r\n              <span className=\"float-right\">\r\n                <Badge pill>{this.getActiveCount(todos)}</Badge>\r\n              </span>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              href=\"#\"\r\n              onClick={() =>\r\n                this.onFilterChange(\"completed\", true, \"Completed\")\r\n              }\r\n              active={this.state.currentFilter === \"Completed\"}\r\n            >\r\n              Completed{\" \"}\r\n              <span className=\"float-right\">\r\n                <Badge pill>{this.getCompletedCount(todos)}</Badge>\r\n              </span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <hr />\r\n        <p>\r\n          <FontAwesomeIcon icon=\"sitemap\" /> Categories{\" \"}\r\n          <a href=\"#\" className=\"float-right\" onClick={this.props.toggleCategoryModal}>\r\n            <FontAwesomeIcon size=\"sm\" icon=\"plus\" />\r\n          </a>\r\n        </p>\r\n        <Nav vertical>\r\n          {categories.map(cat => (\r\n            <NavItem key={cat._id}>\r\n              <NavLink\r\n                href=\"#\"\r\n                onClick={() =>\r\n                  this.onFilterChange(\"category\", cat._id, cat.name)\r\n                }\r\n                active={this.state.currentFilter === cat.name}\r\n              >\r\n                {cat.name}\r\n                <span className=\"float-right\">\r\n                  <Badge pill>{this.getCategoryCount(cat._id, todos)}</Badge>\r\n                </span>\r\n              </NavLink>\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n        <hr />\r\n        <p>\r\n          <FontAwesomeIcon icon=\"tags\" /> Tags{\" \"}\r\n          <a href=\"#\" className=\"float-right\" onClick={this.props.toggleTagModal}>\r\n            <FontAwesomeIcon size=\"sm\" icon=\"plus\" />\r\n          </a>\r\n        </p>\r\n        {tags.map(tag => (\r\n          <a\r\n            key={tag._id}\r\n            href=\"#\"\r\n            className={`tags-list ${\r\n              this.state.currentFilter === tag.name ? \"active\" : \"\"\r\n            }`}\r\n            onClick={() => this.onFilterChange(\"tag\", tag._id, tag.name)}\r\n          >\r\n            <Badge pill>{tag.name}</Badge>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilters.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(mapStateToProps)(Filters);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  FILTER_TODO,\r\n  TODOS_LOADING\r\n} from \"./types.js\";\r\n\r\nexport const getTodos = () => dispatch => {\r\n  dispatch(setTodosLoading());\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n\r\n  if (todos.length) {\r\n    dispatch({\r\n      type: GET_TODOS,\r\n      payload: todos\r\n    });\r\n  } else {\r\n    axios.get(\"data/todos.json\").then(res =>\r\n      dispatch({\r\n        type: GET_TODOS,\r\n        payload: res.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const addTodo = todo => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  todos.unshift(todo);\r\n  localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  dispatch({\r\n    type: ADD_TODO,\r\n    payload: todo\r\n  });\r\n};\r\n\r\nexport const deleteTodo = id => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  const newTodos = todos.filter(todo => {\r\n    return todo._id !== id;\r\n  });\r\n  localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n\r\n  dispatch({\r\n    type: DELETE_TODO,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const updateTodo = updatedTodo => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  const updatedTodos = todos.map( (todo, index) => {\r\n    if (todo._id === updatedTodo._id) {\r\n      return (todo = updatedTodo);\r\n    }\r\n    return todo;\r\n  });\r\n  localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\r\n\r\n  dispatch({\r\n    type: UPDATE_TODO,\r\n    payload: updatedTodo\r\n  });\r\n};\r\n\r\nexport const filterTodos = (type, value) => dispatch => {\r\n  const todos = JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n  const filteredTodos = todos.filter(todo => {\r\n    if (type === \"general\" && value === \"all\") {\r\n      // return all\r\n      return todo;\r\n    } else if (type === \"tag\") {\r\n      // search by tags\r\n      let tags = JSON.parse(todo.tags);\r\n      let hasTag = tags.filter(x => x.value === value).length !== 0;\r\n      if (hasTag) {\r\n        return todo;\r\n      }\r\n    } else {\r\n      return todo[type] === value;\r\n    }\r\n  });\r\n\r\n  dispatch({\r\n    type: FILTER_TODO,\r\n    payload: filteredTodos\r\n  });\r\n};\r\n\r\nexport const setTodosLoading = () => {\r\n  return {\r\n    type: TODOS_LOADING\r\n  };\r\n};\r\n","/* CATEGORIES */\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\r\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\r\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\r\n\r\nexport const CATEGORIES_LOADING = \"CATEGORIES_LOADING\";\r\n\r\n/* TAGS */\r\nexport const GET_TAGS = \"GET_TAGS\";\r\nexport const ADD_TAG = \"ADD_TAG\";\r\nexport const DELETE_TAG = \"DELETE_TAG\";\r\n\r\nexport const TAGS_LOADING = \"TAGS_LOADING\";\r\n\r\n/* TODOS */\r\nexport const GET_TODOS = \"GET_TODOS\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const FILTER_TODO = \"FILTER_TODO\";\r\n\r\nexport const TODOS_LOADING = \"TODOS_LOADING\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  Badge,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { deleteTodo, updateTodo } from \"../actions/todoActions\";\r\n\r\nclass TodoItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteTodo(id);\r\n  };\r\n\r\n  onCompleteClick = (todo, completed) => {\r\n    todo.completed = !completed;\r\n    this.props.updateTodo(todo);\r\n  };\r\n\r\n  getCategoryName = (categoryId, categories) => {\r\n    const cat = categories.find(x => x._id === categoryId);\r\n    if (typeof cat !== \"undefined\") {\r\n      return cat[\"name\"];\r\n    }\r\n  };\r\n\r\n  getTagName = (tagId, tags) => {\r\n    const tag = tags.find(x => x._id === tagId);\r\n    if (typeof tag !== \"undefined\") {\r\n      return tag[\"name\"];\r\n    }\r\n  };\r\n\r\n  getDateState = date => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let dueDate = new Date(date);\r\n    dueDate.setHours(0, 0, 0, 0);\r\n\r\n    if (dueDate.getTime() > today.getTime()) {\r\n      return \"text-primary\";\r\n    } else if (dueDate.getTime() == today.getTime()) {\r\n      return \"text-warning\";\r\n    } else {\r\n      return \"text-danger\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const todoItem = this.props.todoItem;\r\n    const { categories } = this.props.category;\r\n\r\n    return (\r\n      <div>\r\n          <ListGroupItem\r\n            className={\r\n              todoItem.completed\r\n                ? \"toDo__list-item completed\"\r\n                : \"toDo__list-item\"\r\n            }\r\n          >\r\n            <ListGroupItemHeading>\r\n              <span className=\"toDo__title\">{todoItem.name}</span>{\" \"}\r\n              <Badge color=\"secondary\">\r\n                {this.getCategoryName(todoItem.category, categories)}\r\n              </Badge>\r\n              <div className=\"float-right toDo__actions\">\r\n                <a\r\n                  className=\"text-primary\"\r\n                  href=\"#\"\r\n                  onClick={this.onCompleteClick.bind(\r\n                    this,\r\n                    todoItem,\r\n                    todoItem.completed\r\n                  )}\r\n                >\r\n                  <FontAwesomeIcon icon=\"check\" />\r\n                </a>\r\n                <a\r\n                  className=\"text-primary\"\r\n                  href=\"#\"\r\n                  onClick={this.props.editTodo.bind(this, todoItem)}\r\n                >\r\n                  <FontAwesomeIcon icon=\"edit\" />\r\n                </a>\r\n                <a\r\n                  className=\"text-primary\"\r\n                  href=\"#\"\r\n                  onClick={this.onDeleteClick.bind(this, todoItem._id)}\r\n                >\r\n                  <FontAwesomeIcon icon=\"trash-alt\" />\r\n                </a>\r\n              </div>\r\n            </ListGroupItemHeading>\r\n            <ListGroupItemText className=\"truncate\">\r\n              {TodoItem.description}\r\n            </ListGroupItemText>\r\n            <div className=\"list-goup-item-footer\">\r\n              <Row>\r\n                <Col className=\"toDo__tags\">\r\n                  <div>\r\n                    {todoItem.tags.length !== 0\r\n                      ? JSON.parse(todoItem.tags).map(tag => (\r\n                          <Badge key={tag.value} color=\"secondary\">\r\n                            {tag.label}\r\n                          </Badge>\r\n                        ))\r\n                      : \"\"}\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"text-right\">\r\n                    <h6 className={this.getDateState(todoItem.dueDate)}>\r\n                      <strong>Due: </strong>{\" \"}\r\n                      {new Intl.DateTimeFormat(\"en-GB\", {\r\n                        year: \"numeric\",\r\n                        month: \"short\",\r\n                        day: \"2-digit\"\r\n                      }).format(new Date(todoItem.dueDate))}\r\n                    </h6>\r\n                    <h6>\r\n                      <strong>Added: </strong>{\" \"}\r\n                      {new Intl.DateTimeFormat(\"en-GB\", {\r\n                        year: \"numeric\",\r\n                        month: \"short\",\r\n                        day: \"2-digit\"\r\n                      }).format(new Date(todoItem.date))}\r\n                    </h6>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </ListGroupItem>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  category: PropTypes.object.isRequired,\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  category: state.category,\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteTodo, updateTodo }\r\n)(TodoItem);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteTodo, updateTodo } from \"../actions/todoActions\";\r\n\r\nimport { ListGroup } from \"reactstrap\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodoList extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      filteredTodos: [],\r\n      filter: {}\r\n    }\r\n  }\r\n  onDeleteClick = id => {\r\n    this.props.deleteTodo(id);\r\n  };\r\n\r\n  onCompleteClick = (todo, completed) => {\r\n    todo.completed = !completed;\r\n    this.props.updateTodo(todo);\r\n  };\r\n\r\n  getCategoryName = (categoryId, categories) => {\r\n    const cat = categories.find(x => x._id === categoryId);\r\n    if (typeof cat !== \"undefined\") {\r\n      return cat[\"name\"];\r\n    }\r\n  };\r\n\r\n  getTagName = (tagId, tags) => {\r\n    const tag = tags.find(x => x._id === tagId);\r\n    if (typeof tag !== \"undefined\") {\r\n      return tag[\"name\"];\r\n    }\r\n  };\r\n\r\n  getDateState = date => {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let dueDate = new Date(date);\r\n    dueDate.setHours(0, 0, 0, 0);\r\n\r\n    if (dueDate.getTime() > today.getTime()) {\r\n      return \"text-primary\";\r\n    } else if (dueDate.getTime() === today.getTime()) {\r\n      return \"text-warning\";\r\n    } else {\r\n      return \"text-danger\";\r\n    }\r\n  };\r\n\r\n  // componentDidUpdate (prevProps, prevState) {\r\n    \r\n  //   const { todos } = this.props.todo;\r\n  //   const filter = todos.filter(todo => {\r\n  //     let type = prevProps.filter.type;\r\n  //     let value = prevProps.filter.value;\r\n  //     if (type === \"general\" && value === \"all\") {\r\n  //       // return all\r\n  //       return todo;\r\n  //     } else if (type === \"tag\") {\r\n  //       // search by tags\r\n  //       let tags = JSON.parse(todo.tags);\r\n  //       let hasTag = tags.filter(x => x.value === value).length !== 0;\r\n  //       if (hasTag) {\r\n  //         return todo;\r\n  //       }\r\n  //     } else {\r\n  //       return todo[type] === value;\r\n  //     }\r\n  //   });\r\n  //   console.log(prevState.filteredTodos.length);\r\n  //   console.log(filter.length)\r\n\r\n  //   if(prevState.filteredTodos.length !== filter.length){\r\n  //     console.log('change state')\r\n  //     this.setState({\r\n  //       filteredTodos: filter\r\n  //     })\r\n  //   }\r\n\r\n    \r\n  // }\r\n\r\n  render() {\r\n    const { todos } = this.props.todo;\r\n    const filter = todos.filter(todo => {\r\n      let type = this.props.filter.type;\r\n      let value = this.props.filter.value;\r\n      if (type === \"general\" && value === \"all\") {\r\n        // return all\r\n        return todo;\r\n      } else if (type === \"tag\") {\r\n        // search by tags\r\n        let tags = JSON.parse(todo.tags);\r\n        let hasTag = tags.filter(x => x.value === value).length !== 0;\r\n        if (hasTag) {\r\n          return todo;\r\n        }\r\n      } else {\r\n        return todo[type] === value;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <ListGroup className=\"todo\">\r\n        <TransitionGroup className=\"todo__list\">\r\n            {filter.map(todoItem => (\r\n              <CSSTransition key={todoItem._id} timeout={500} classNames=\"fade\">\r\n                <TodoItem\r\n                  todoItem={todoItem}\r\n                  editTodo={this.props.editTodo}\r\n                  />\r\n              </CSSTransition>\r\n            ))}\r\n        </TransitionGroup>\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteTodo, updateTodo }\r\n)(TodoList);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Select from \"react-select\";\r\nimport uuid from \"uuid\";\r\n\r\nimport { addTodo, updateTodo } from \"../actions/todoActions\";\r\n\r\nclass TodoModal extends Component {\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      nameInvalid: false,\r\n      todoItem: {\r\n        _id: null,\r\n        name: \"\",\r\n        description: \"\",\r\n        category: null,\r\n        tags: [],\r\n        dueDate: new Date(),\r\n        date: null,\r\n        completed: null\r\n      }\r\n    };\r\n  }\r\n\r\n  onInputChange = e => {\r\n    let todoItem = Object.assign({}, this.state.todoItem);    //creating copy of object\r\n    todoItem[e.target.name] = e.target.value;      \r\n  \r\n    this.setState({ todoItem });\r\n  };\r\n\r\n  onCategoryChange = e => {\r\n    let todoItem = Object.assign({}, this.state.todoItem);    //creating copy of object\r\n    todoItem.category = e.value;      \r\n    this.setState({\r\n      todoItem\r\n    });\r\n  };\r\n\r\n  onTagsChange = e => {\r\n    let todoItem = Object.assign({}, this.state.todoItem);    //creating copy of object\r\n    todoItem.tags = JSON.stringify(e);      \r\n    this.setState({\r\n      todoItem\r\n    });\r\n  };\r\n\r\n  onTodoSubmited = e => {\r\n    e.preventDefault();\r\n    if (this.state.name === \"\") {\r\n      this.setState({\r\n        nameInvalid: true\r\n      });\r\n    } else {\r\n      this.setState(\r\n        {\r\n          nameInvalid: false\r\n        },\r\n        () => {\r\n          const {_id, name, description, category, tags, dueDate, date, completed} = this.state.todoItem;\r\n          const todo = {\r\n            _id: _id == null ? uuid() : _id,\r\n            name,\r\n            description,\r\n            category,\r\n            tags,\r\n            dueDate: new Date(dueDate),\r\n            date: date == null ? new Date() : new Date(date),\r\n            completed: completed == null ? false : completed\r\n          };\r\n          // Add todo via addTodo action\r\n          if(this.state.todoItem._id === null){\r\n            this.props.addTodo(todo);\r\n          } else {\r\n            this.props.updateTodo(todo);\r\n          }\r\n\r\n          /* Close category modal */\r\n          this.props.toggleTodoModal();\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  onTodoModalClose = () => {\r\n    this.setState({\r\n      todoItem: {\r\n        _id: null,\r\n        name: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        tags: [],\r\n        dueDate: new Date(),\r\n        date: null,\r\n        completed: null\r\n      }\r\n    })\r\n\r\n    this.props.toggleTodoModal();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.todoItem != null) {\r\n      const { _id, name, description, category, tags, dueDate, date, completed } = prevProps.todoItem;\r\n      this.setState({\r\n        todoItem: {\r\n          _id,\r\n          name,\r\n          description,\r\n          category,\r\n          tags,\r\n          dueDate,\r\n          date,\r\n          completed\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.props.category;\r\n    const catOptions = categories.map(category => {\r\n      return { value: category._id, label: category.name };\r\n    });\r\n\r\n    const { tags } = this.props.tag;\r\n    const tagsOptions = tags.map(tag => {\r\n      return { value: tag._id, label: tag.name };\r\n    });\r\n\r\n    const selectedTags = this.state.todoItem.tags.length > 0 ? JSON.parse(this.state.todoItem.tags) : \"\";\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          isOpen={this.props.todoModal}\r\n          toggle={this.onTodoModalClose}\r\n        >\r\n          <ModalHeader toggle={this.toggleToDo}>{this.state.todoItem._id !== null ? \"Update \" + this.state.todoItem.name : \"Add Todo\"}</ModalHeader>\r\n          <Form onSubmit={this.onTodoSubmited}>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"name\">Name*</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Add todo name\"\r\n                      value={this.state.todoItem.name}\r\n                      onChange={this.onInputChange.bind(this)}\r\n                      invalid={this.state.nameInvalid}\r\n                    />\r\n                    <FormFeedback>This field is required</FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"description\">Description</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"description\"\r\n                      id=\"description\"\r\n                      placeholder=\"Add todo descrption\"\r\n                      value={this.state.todoItem.description}\r\n                      onChange={this.onInputChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"category\">Category</Label>\r\n                    <InputGroup>\r\n                      <Select\r\n                        value={catOptions.find(option => option.value === this.state.todoItem.category)}\r\n                        name=\"category\"\r\n                        id=\"category\"\r\n                        onChange={this.onCategoryChange}\r\n                        options={catOptions}\r\n                      />\r\n                      <InputGroupAddon addonType=\"append\">\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          onClick={this.props.toggleCategoryModal}\r\n                        >\r\n                          <FontAwesomeIcon icon=\"plus\" />\r\n                        </Button>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"tags\">Tags</Label>\r\n                    <InputGroup>\r\n                      <Select\r\n                        value={selectedTags}\r\n                        isMulti\r\n                        name=\"tags\"\r\n                        id=\"tags\"\r\n                        onChange={this.onTagsChange}\r\n                        options={tagsOptions}\r\n                      />\r\n                      <InputGroupAddon addonType=\"append\">\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          onClick={this.props.toggleTagModal}\r\n                        >\r\n                          <FontAwesomeIcon icon=\"plus\" />\r\n                        </Button>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"dueDate\">Due Date</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"dueDate\"\r\n                      id=\"dueDate\"\r\n                      placeholder=\"Add todo due date\"\r\n                      value={new Date(this.state.todoItem.dueDate)}\r\n                      onChange={this.onInputChange}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={this.addNewTodo}>\r\n                {this.state.todoItem._id !== null ? \"Update\" : \"Submit\"}\r\n              </Button>\r\n              <Button color=\"secondary\" onClick={this.onTodoModalClose}>\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTodoModal.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  category: PropTypes.object.isRequired,\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addTodo, updateTodo }\r\n)(TodoModal);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_CATEGORIES,\r\n  ADD_CATEGORY,\r\n  DELETE_CATEGORY,\r\n  CATEGORIES_LOADING\r\n} from \"./types.js\";\r\n\r\nexport const getCategories = () => dispatch => {\r\n  dispatch(setCategoriesLoading());\r\n  const categories = JSON.parse(localStorage.getItem(\"categories\")) || [];\r\n\r\n  if (categories.length) {\r\n    dispatch({\r\n      type: GET_CATEGORIES,\r\n      payload: categories\r\n    });\r\n  } else {\r\n    axios.get(\"data/categories.json\").then(res =>\r\n      dispatch({\r\n        type: GET_CATEGORIES,\r\n        payload: res.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const addCategory = category => dispatch => {\r\n  const categories = JSON.parse(localStorage.getItem(\"categories\")) || [];\r\n  categories.unshift(category);\r\n  localStorage.setItem(\"categories\", JSON.stringify(categories));\r\n  dispatch({\r\n    type: ADD_CATEGORY,\r\n    payload: category\r\n  });\r\n};\r\n\r\nexport const deleteCategory = id => dispatch => {\r\n  const categories = JSON.parse(localStorage.getItem(\"categories\")) || [];\r\n  const newCategories = categories.filter(category => {\r\n    return category._id !== id;\r\n  });\r\n  localStorage.setItem(\"categories\", JSON.stringify(newCategories));\r\n\r\n  dispatch({\r\n    type: DELETE_CATEGORY,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const setCategoriesLoading = () => {\r\n  return {\r\n    type: CATEGORIES_LOADING\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport uuid from \"uuid\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Label,\r\n  Input,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { addCategory, deleteCategory } from \"../actions/categoriesActions\";\r\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass CategoryModal extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      catCollapse: false,\r\n      nameInvalid: false,\r\n      name: \"\",\r\n      description: \"\",\r\n    };\r\n  }\r\n  \r\n\r\n  toggleCategoryCollapse = () => {\r\n    this.setState({\r\n      catCollapse: !this.state.catCollapse\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n  onCategorySubmited = e => {\r\n    e.preventDefault();\r\n    if(this.state.name === \"\") {\r\n      this.setState({\r\n        nameInvalid: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        nameInvalid: false\r\n      }, () => {\r\n        const category = {\r\n          _id: uuid(),\r\n          name: this.state.name,\r\n          description: this.state.description\r\n        };\r\n        // Add todo via newCategory action\r\n        this.props.addCategory(category);\r\n    \r\n        /* Close category modal */\r\n        this.props.toggleCategoryModal();\r\n      })\r\n    }\r\n  };\r\n\r\n  onDeleteCategory = id => {\r\n    this.props.deleteCategory(id);\r\n  };\r\n\r\n  render() {\r\n    const { categories } = this.props.category;\r\n    return (\r\n      <Modal isOpen={this.props.categoryModal} toggle={this.props.toggleCategoryModal}>\r\n        <Form onSubmit={this.onCategorySubmited}>\r\n          <ModalHeader>Add Category </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label for=\"name\">Name*</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Add category name\"\r\n                onChange={this.onChange}\r\n                invalid={this.state.nameInvalid}\r\n              />\r\n              <FormFeedback>This field is required</FormFeedback>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"description\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                placeholder=\"Add category description\"\r\n                onChange={this.onChange}\r\n              />\r\n            </FormGroup>\r\n            <Collapse isOpen={this.state.catCollapse}>\r\n              <h5>Existing categories</h5>\r\n              <br />\r\n              <ListGroup>\r\n                {categories.map(cat => (\r\n                  <ListGroupItem key={cat._id}>\r\n                    <strong>{cat.name}</strong> - {cat.description}\r\n                    <a\r\n                      className=\"text-danger float-right\"\r\n                      href=\"#\"\r\n                      onClick={this.onDeleteCategory.bind(this, cat._id)}\r\n                    >\r\n                      <FontAwesomeIcon icon=\"trash-alt\" />\r\n                    </a>\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n            </Collapse>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggleCategoryCollapse}>\r\n              Show/Edit existing categories\r\n            </Button>\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Add Category\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.props.toggleCategoryModal}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nCategoryModal.propTypes = {\r\n  category: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  category: state.category\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addCategory, deleteCategory }\r\n)(CategoryModal);\r\n","import axios from \"axios\";\r\nimport { GET_TAGS, ADD_TAG, DELETE_TAG, TAGS_LOADING } from \"./types.js\";\r\n\r\nexport const getTags = () => dispatch => {\r\n  dispatch(setTagsLoading());\r\n  const tags = JSON.parse(localStorage.getItem(\"tags\")) || [];\r\n  if (tags.length) {\r\n    dispatch({\r\n      type: GET_TAGS,\r\n      payload: tags\r\n    });\r\n  } else {\r\n    axios.get(\"data/tags.json\").then(res =>\r\n      dispatch({\r\n        type: GET_TAGS,\r\n        payload: res.data\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const addTag = tag => dispatch => {\r\n  const tags = JSON.parse(localStorage.getItem(\"tags\")) || [];\r\n  tags.unshift(tag);\r\n  localStorage.setItem(\"tags\", JSON.stringify(tags));\r\n  dispatch({\r\n    type: ADD_TAG,\r\n    payload: tag\r\n  });\r\n};\r\n\r\nexport const deleteTag = id => dispatch => {\r\n  const tags = JSON.parse(localStorage.getItem(\"tags\")) || [];\r\n  const newTags = tags.filter(tag => {\r\n    return tag._id !== id;\r\n  });\r\n  localStorage.setItem(\"tags\", JSON.stringify(newTags));\r\n\r\n  dispatch({\r\n    type: DELETE_TAG,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const setTagsLoading = () => {\r\n  return {\r\n    type: TAGS_LOADING\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport uuid from \"uuid\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Label,\r\n  Input,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { addTag, deleteTag } from \"../actions/tagsActions\";\r\n\r\nclass TagModal extends Component {\r\n  state = {\r\n    tagCollapse: false,\r\n    nameInvalid: false,\r\n    name: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  toggleTagCollapse = () => {\r\n    this.setState({\r\n      tagCollapse: !this.state.tagCollapse\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onTagSubmited = e => {\r\n    e.preventDefault();\r\n    if(this.state.name === \"\") {\r\n      this.setState({\r\n        nameInvalid: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        nameInvalid: false\r\n      }, () => {\r\n        const newTag = {\r\n          _id: uuid(),\r\n          name: this.state.name,\r\n          description: this.state.description\r\n        };\r\n        // Add todo via newCategory action\r\n        this.props.addTag(newTag);\r\n    \r\n        /* Close category modal */\r\n        this.props.toggleTagModal();\r\n      })\r\n    }\r\n  };\r\n\r\n  onDeleteTag = id => {\r\n    this.props.deleteTag(id);\r\n  };\r\n\r\n  render() {\r\n    const { tags } = this.props.tag;\r\n    return (\r\n      <Modal isOpen={this.props.tagModal} toggle={this.props.toggleTagModal}>\r\n        <Form onSubmit={this.onTagSubmited}>\r\n          <ModalHeader>Add Tag </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label for=\"name\">Name*</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"Add tag name\"\r\n                onChange={this.onChange}\r\n                invalid={this.state.nameInvalid}\r\n              />\r\n              <FormFeedback>This field is required</FormFeedback>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"description\">Description</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"description\"\r\n                id=\"description\"\r\n                placeholder=\"Add tag description\"\r\n                onChange={this.onChange}\r\n              />\r\n            </FormGroup>\r\n            <Collapse isOpen={this.state.tagCollapse}>\r\n              <h5>Existing tags</h5>\r\n              <br />\r\n              <ListGroup>\r\n                {tags.map(tag => (\r\n                  <ListGroupItem key={tag._id}>\r\n                    <strong>{tag.name}</strong> - {tag.description}\r\n                    <a\r\n                      className=\"text-danger float-right\"\r\n                      href=\"#\"\r\n                      onClick={this.onDeleteTag.bind(this, tag._id)}\r\n                    >\r\n                      <FontAwesomeIcon icon=\"trash-alt\" />\r\n                    </a>\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n            </Collapse>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggleTagCollapse}>\r\n              Show/Edit existing tags\r\n            </Button>\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Add Tag\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.props.toggleTagModal}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nTagModal.propTypes = {\r\n  tag: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tag: state.tag\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addTag, deleteTag }\r\n)(TagModal);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Filters from \"./Filters\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoModal from \"./TodoModal\";\r\nimport CategoryModal from \"./CategoryModal\";\r\nimport TagModal from \"./TagModal\";\r\n\r\nimport { getTodos } from \"../actions/todoActions\";\r\nimport { getCategories } from \"../actions/categoriesActions\";\r\nimport { getTags } from \"../actions/tagsActions\";\r\n\r\nclass ToDo extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todoModal: false,\r\n      categoryModal: false,\r\n      tagModal: false,\r\n      todoItem: null,\r\n      filter: {\r\n        type: \"general\",\r\n        value: \"all\",\r\n        current: \"All\"\r\n      },\r\n      dropdownOpen: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTodos();\r\n    this.props.getCategories();\r\n    this.props.getTags();\r\n  }\r\n\r\n  toggleTodoModal = () => {\r\n    this.setState({\r\n      todoModal: !this.state.todoModal,\r\n      todoItem: null\r\n    });\r\n  };\r\n\r\n  toggleCategoryModal = () => {\r\n    this.setState({\r\n      categoryModal: !this.state.categoryModal\r\n    });\r\n  };\r\n\r\n  toggleTagModal = () => {\r\n    this.setState({\r\n      tagModal: !this.state.tagModal\r\n    });\r\n  };\r\n\r\n  editTodo = todo => {\r\n    this.setState(\r\n      {\r\n        todoItem: todo\r\n      },\r\n      () => {\r\n        this.toggleTodoModal();\r\n      }\r\n    );\r\n  };\r\n\r\n  controlFilter = (type, value, current) => {\r\n    const newFilter = { type, value, current };\r\n    this.setState({\r\n      filter: newFilter\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"custom-fluid\">\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"font-weight-light\">Todo List</h2>\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <Button color=\"dark\" onClick={this.toggleTodoModal}>\r\n              Add Todo\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col sm=\"3\" className=\"filters\">\r\n            <Filters\r\n              filter={this.state.filter}\r\n              controlFilter={this.controlFilter}\r\n              toggleCategoryModal={this.toggleCategoryModal}\r\n              categoryModal={this.state.categoryModal}\r\n              toggleTagModal={this.toggleTagModal}\r\n              tagModal={this.state.tagModal}\r\n            />\r\n          </Col>\r\n          <Col sm=\"9\">\r\n            <Row>\r\n              <Col>\r\n                <p>\r\n                  Showing: <strong>{this.state.filter.current}</strong>\r\n                </p>\r\n              </Col>\r\n              <Col className=\"text-right\">\r\n                <ButtonDropdown\r\n                  size=\"sm\"\r\n                  isOpen={this.state.dropdownOpen}\r\n                  toggle={this.toggle}\r\n                >\r\n                  <DropdownToggle caret className=\"custom-filter\">\r\n                    Newest\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    <DropdownItem>Newest</DropdownItem>\r\n                    <DropdownItem>Oldest</DropdownItem>\r\n                    <DropdownItem>Due today</DropdownItem>\r\n                    <DropdownItem>Due tomorrow</DropdownItem>\r\n                    <DropdownItem>Due this week</DropdownItem>\r\n                    <DropdownItem>Ending Soon</DropdownItem>\r\n                  </DropdownMenu>\r\n                </ButtonDropdown>\r\n              </Col>\r\n            </Row>\r\n            <TodoList filter={this.state.filter} editTodo={this.editTodo} />\r\n          </Col>\r\n        </Row>\r\n        <TodoModal\r\n          todoItem={this.state.todoItem}\r\n          todoModal={this.state.todoModal}\r\n          toggleTodoModal={this.toggleTodoModal}\r\n          toggleCategoryModal={this.toggleCategoryModal}\r\n          toggleTagModal={this.toggleTagModal}\r\n        />\r\n        <CategoryModal\r\n          categoryModal={this.state.categoryModal}\r\n          toggleCategoryModal={this.toggleCategoryModal}\r\n        />\r\n        <TagModal\r\n          tagModal={this.state.tagModal}\r\n          toggleTagModal={this.toggleTagModal}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nToDo.propTypes = {\r\n  getTodos: PropTypes.func.isRequired,\r\n  getCategories: PropTypes.func.isRequired,\r\n  getTags: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.todo,\r\n  category: state.category,\r\n  tag: state.tag,\r\n  filter: state.filter\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTodos, getCategories, getTags }\r\n)(ToDo);\r\n","import {\r\n  GET_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  TODOS_LOADING,\r\n  FILTER_TODO\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TODOS:\r\n      localStorage.setItem(\"todos\", JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [action.payload, ...state.todos]\r\n      };\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo._id !== action.payload)\r\n      };\r\n    case UPDATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((item, index) => {\r\n          if (item._id !== action.payload._id) {\r\n            \r\n            // This isn't the item we care about - keep it as-is\r\n            return item;\r\n          }\r\n          // Otherwise, this is the one we want - return an updated value\r\n          return {\r\n            ...item,\r\n            ...action.payload\r\n          };\r\n        })\r\n      };\r\n    case FILTER_TODO:\r\n      return {\r\n        ...state,\r\n        todos: action.payload\r\n      };\r\n    case TODOS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_CATEGORIES,\r\n  ADD_CATEGORY,\r\n  DELETE_CATEGORY,\r\n  CATEGORIES_LOADING\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CATEGORIES:\r\n      localStorage.setItem(\"categories\", JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        categories: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: [action.payload, ...state.categories]\r\n      };\r\n    case DELETE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: state.categories.filter(\r\n          category => category._id !== action.payload\r\n        )\r\n      };\r\n    case CATEGORIES_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_TAGS,\r\n  ADD_TAG,\r\n  DELETE_TAG,\r\n  TAGS_LOADING\r\n} from \"../actions/types.js\";\r\n\r\nconst initialState = {\r\n  tags: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TAGS:\r\n      localStorage.setItem(\"tags\", JSON.stringify(action.payload));\r\n      return {\r\n        ...state,\r\n        tags: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_TAG:\r\n      return {\r\n        ...state,\r\n        tags: [action.payload, ...state.tags]\r\n      };\r\n    case DELETE_TAG:\r\n      return {\r\n        ...state,\r\n        tags: state.tags.filter(tag => tag._id !== action.payload)\r\n      };\r\n    case TAGS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\nimport tagReducer from \"./tagReducer\";\r\n\r\nexport default combineReducers({\r\n  todo: todoReducer,\r\n  category: categoryReducer,\r\n  tag: tagReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nlet devTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nif (process.env.NODE_ENV === \"prod\" || process.env.NODE_ENV === \"production\") {\r\n  devTools = a => a;\r\n}\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    devTools\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, NavbarBrand, Container } from \"reactstrap\";\r\n\r\nclass AppNavbar extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"secondary\" dark expand=\"sm\">\r\n          <Container fluid>\r\n            <NavbarBrand href=\"/\">\r\n              <span className=\"text-primary\">{\"<\"}</span>\r\n              />\r\n            </NavbarBrand>\r\n            {/* Add Github */}\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppNavbar;\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport TodoContainer from \"./components/TodoContainer\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faEdit,\r\n  faCheck,\r\n  faTrashAlt,\r\n  faList,\r\n  faCalendarAlt,\r\n  faPlus,\r\n  faArchive,\r\n  faTh,\r\n  faHome,\r\n  faClipboardList,\r\n  faAddressBook,\r\n  faClipboard,\r\n  faBookmark,\r\n  faSuitcase,\r\n  faHandshake,\r\n  faUserCircle,\r\n  faInfoCircle,\r\n  faTags,\r\n  faFilter,\r\n  faSitemap\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport store from \"./store\";\r\n\r\nimport AppNavbar from \"./components/AppNavbar\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Provider store={store}>\r\n          <AppNavbar />\r\n          <TodoContainer />\r\n        </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlibrary.add(\r\n  faEdit,\r\n  faCheck,\r\n  faTrashAlt,\r\n  faList,\r\n  faCalendarAlt,\r\n  faPlus,\r\n  faArchive,\r\n  faTh,\r\n  faHome,\r\n  faClipboardList,\r\n  faAddressBook,\r\n  faClipboard,\r\n  faBookmark,\r\n  faSuitcase,\r\n  faHandshake,\r\n  faUserCircle,\r\n  faInfoCircle,\r\n  faTags,\r\n  faFilter,\r\n  faSitemap\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./styles/index.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}